# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

interactions:
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Cookie:
      - __cf_bm=6Ck3v1.bORRZCDv9LL9iMOp1gEeyIgsZKbidQscF5bM-1674854591-0-AVaAndjbOZ+lbspUWg+vg0iYmMsCnw7/n0hz8nGKikESdaF8KnRJhhsQs2OFKM5l9sWtZTMG/ybTtTj09bpCgKE=
      User-Agent:
      - python-requests/2.28.1
      X-App-Name:
      - MA-TI-Python-Lib-v0.1
    method: GET
    uri: https://api.intelligence.mandiant.com/v4/malware/malware--bc1aac4f-7b86-537d-8e37-840218794b8e
  response:
    body:
      string: '{"actors":[{"id":"threat-actor--90283f7b-0ec6-5884-969d-748698b3ab49","name":"UNC2386","country_name":"Russia","iso2":"RU","last_updated":"2022-11-08T08:31:36Z"},{"id":"threat-actor--e6c0f218-f881-5755-aa0e-07f2b26f9ec6","name":"UNC2589","country_name":"Russia","iso2":"RU","last_updated":"2023-01-19T21:53:46Z"}],"audience":[{"name":"intel_fusion","license":"INTEL_RBI_FUS"},{"name":"intel_cc","license":"INTEL_CYB_CRIME"},{"name":"intel_oper","license":"INTEL_RBI_OPS"},{"name":"tlp_marking","license":"amber"}],"description":"SMOKELOADER
        is a downloader that retrieves additional payloads via HTTP. Retrieved payloads
        are mapped into memory and may include plugins that expand SMOKELOADER''s
        functionality. Capabilities added via plugins include keylogging, credential
        theft, and DDoS. Retrieved payloads may also include additional malware such
        as AZORULT, FORMBOOK, REMCOS, URSNIF, SILENTNIGHT, TRICKBOT, and SYSTEMBC.","detections":["Trojan.SmokeLoader
        (Trellix)","(http_inspect) unknown Content-Encoding used (Cisco Firepower)","(http_inspect)
        not HTTP traffic (Cisco Firepower)","ET POLICY exe download via HTTP - Informational
        (ET OPEN)","MaliciousSSLCert.SmokeLoader","ET DNS Standard query response,
        Name Error (ET OPEN)","ET INFO SUSPICIOUS Dotted Quad Host MZ Response (ET
        OPEN)","ET TROJAN VMProtect Packed Binary Inbound via HTTP - Likely Hostile
        (ET OPEN)","FILE-EXECUTABLE Portable Executable binary file magic detected
        (Cisco Firepower)","ET POLICY PE EXE or DLL Windows file download HTTP (ET
        OPEN)","trojan/Win32 EXE.kryptik.azvgx (Palo Alto Networks)","Trojan.Dofoil","Win.Dropper.Glupteba-9755051-0
        (ClamAV)","Malicious.SSL.Smokeloader","Trojan.Sharik","ET INFO Packed Executable
        Download (ET OPEN)","Downloader.SmokeLoader","Trojan.SmokeLoader","Trojan.Downloader.Dofoil","ET
        TROJAN UPX compressed file download possible malware (ET OPEN)","Trojan.Win.SmokeLoader","ET
        SHELLCODE Possible TCP x86 JMP to CALL Shellcode Detected (ET OPEN)"],"id":"malware--bc1aac4f-7b86-537d-8e37-840218794b8e","industries":[{"id":"identity--74d68d1c-7ad3-5eb5-a594-5519c1ee2661","name":"Education"},{"id":"identity--c5e884ab-d62f-5632-9fc8-3ab3fb752598","name":"Energy
        \u0026 Utilities"},{"id":"identity--eaaa8a1a-0db8-5c22-a895-3b0327e3eff1","name":"Financial
        Services"},{"id":"identity--8d0881d8-d199-5e5a-bef9-be3ca6bb8f0d","name":"Governments"},{"id":"identity--cacd2de0-d89e-54e3-a8af-88a41d312a12","name":"Healthcare"},{"id":"identity--5a90f5ac-2ac0-5cbe-ae22-eb07a4da67c9","name":"Hospitality"},{"id":"identity--8b245566-834c-5039-95ae-f6a4ffc03b44","name":"Legal
        \u0026 Professional Services"},{"id":"identity--e0fc24e1-1f79-556a-b8f4-b56735ccf42b","name":"Manufacturing"},{"id":"identity--60c05066-3b67-5783-b32e-4104b86d06c1","name":"Oil
        \u0026 Gas"},{"id":"identity--c9000eb7-82e8-5859-9845-17c4760400cb","name":"Pharmaceuticals"},{"id":"identity--c09ecb05-79d5-5a2b-b47f-65c1092a3a56","name":"Retail"},{"id":"identity--02142d73-54af-5e18-a4f5-70b194ca002b","name":"Technology"},{"id":"identity--93209517-b16c-5893-b55e-b7edc9b478d0","name":"Telecommunications"},{"id":"identity--8768c9d0-830d-5c94-88d1-1506fef6c838","name":"Transportation"}],"inherently_malicious":1,"last_activity_time":"2023-01-27T02:20:01.000Z","last_updated":"2023-01-27T02:20:01.000Z","malware":[{"id":"malware--cc1d563a-cf32-55e8-bae3-cbdf8266c794","name":"AMADEY"},{"id":"malware--448e822d-8496-5021-88cb-599062f74176","name":"BEACON"},{"id":"malware--4f2f08e8-2311-52c5-86f7-c88a0b48b7bc","name":"BEAMHTTP"},{"id":"malware--f0aa164e-9d88-58b5-a2fa-fa3125e03896","name":"DANABOT"},{"id":"malware--daec61d9-86aa-582d-935c-3a7cf571e92a","name":"DUSTCART"},{"id":"malware--27bf2b11-0bd3-5e42-8f5c-ccf5d5d781fb","name":"GAZAVAT"},{"id":"malware--96289be2-7b2a-5c40-be9b-d0141345d028","name":"GCLEANER"},{"id":"malware--73b2f8b4-2892-5a25-a813-29fa3636b117","name":"NANOCORE"},{"id":"malware--c7305956-b7f1-5457-95c6-4a2d2303c61e","name":"PRIVATELOADER"},{"id":"malware--99c2835d-ad29-582f-a904-3c879673bec7","name":"RACCOON"},{"id":"malware--37db201c-7458-5b54-a0a8-f464f6168286","name":"RECORDSTEALER"},{"id":"malware--10f8b689-3e89-5fa8-80fa-69d90617f034","name":"REDLINESTEALER"},{"id":"malware--45e079ad-84da-59ae-bf38-3466c3a1ca41","name":"REMCOS"},{"id":"malware--5a482a36-511c-5031-8ee3-8f8bc4e76a25","name":"SNOWCONE"},{"id":"malware--8c23b4d9-2f79-5c87-b640-ba3c2e4d14cc","name":"SOCELARS"},{"id":"malware--ea812c75-47d7-58da-a041-b73b3bd71184","name":"STEPSTOOL"},{"id":"malware--7970e82b-0e73-5a17-85fe-765911e25035","name":"STOP"},{"id":"malware--17784955-af55-5462-877f-feaba0c8d80a","name":"SYSTEMBC"},{"id":"malware--b2bd3b57-8820-5c18-a383-990cc3d97c72","name":"URSNIF"},{"id":"malware--33210862-613c-5089-a565-c9fb1cc4adfc","name":"VIDAR"},{"id":"malware--8ff0f08c-2599-5eb2-be55-e5c60e0eb01f","name":"WARZONE"}],"name":"SMOKELOADER","operating_systems":["Windows"],"type":"malware","yara":[],"is_publishable":true,"intel_free":false,"counts":{"reports":37,"capabilities":56,"malware":21,"actors":2,"detections":22,"cve":0,"aliases":4,"industries":14,"attack_patterns":64},"aliases":[{"name":"Dofoil
        (Microsoft)"},{"name":"Mokes (Kaspersky)"},{"name":"Sharik (Internet)"},{"name":"Smokeloader
        (Proofpoint)"}],"capabilities":[{"name":"Allocates process memory","description":"Capable
        of allocating user process memory. "},{"name":"Anti-VM: QEMU","description":"Capable
        of detecting or evading QEMU"},{"name":"Anti-VM: Sandboxie","description":"Capable
        of detecting or evading Sandboxie virtualization software."},{"name":"Anti-VM:
        VMware","description":"Capable of detecting or evading VMWare virtual machines."},{"name":"Anti-VM:
        VirtualBox","description":"Capable of detecting or evading Virtual Box"},{"name":"Anti-VM:
        Xen","description":"Capable of detecting or evading Xen virtual machines."},{"name":"Anti-debug
        capabilities","description":"Capabilities associated with anti-debugging techniques.
        "},{"name":"Anti-debug: Windbg","description":"Contains anti-debugging capabilities
        associated with windbg"},{"name":"Bypass Mark-of-the-Web (MOTW)","description":"Capable
        of bypassing Mark-of-the-Web (MOTW)."},{"name":"Calculates MD5 hashes","description":"Capable
        of calculating hashes using the MD5 message-digest algorithm."},{"name":"Calculates
        hashes using CRC32","description":"Capable of calculating hashes using the
        CRC32 checksum algorithm."},{"name":"Capture disk information","description":"Can
        capture or extract disk information. "},{"name":"Capture operating system
        information","description":"Can capture information about the system OS configuration."},{"name":"Capture
        payment card data","description":"Can search for and capture payment card
        data."},{"name":"Capture proxy information","description":"Can capture or
        extract proxy information. "},{"name":"Checks HTTP response status code","description":"Capable
        of checking the HTTP response status code."},{"name":"Communicates using HTTP","description":"Can
        communicate using HTTP or an HTTP-like protocol."},{"name":"Communicates using
        a proxy","description":"Can communicate using a proxy (either via detection
        or using a hard-coded proxy)."},{"name":"Constructs mutex","description":"Capable
        of executing constructing (creating) a mutex."},{"name":"Copy files","description":"Can
        copy files on a victim system."},{"name":"Create directories","description":"Capable
        of creating directories."},{"name":"Create files","description":"Can create
        (write) files on a victim system. Contrast with the ability to download files
        to the victim system."},{"name":"Creates processes in suspended state","description":"Capable
        of creating a process in the suspended state. "},{"name":"Decompression Capabilities","description":"Capabilities
        associated with decompression. \"Parent\" aspect used to contain specific
        sub-aspects."},{"name":"Decrypts using RC4","description":"Can decrypt data
        that is encrypted using the RC4 encryption algorithm. May refer to decryption
        of data or files."},{"name":"Delete files","description":"Can delete files
        on a victim system (normal delete, does not include secure deletion with overwriting)."},{"name":"Encrypts
        data with RC4","description":"Can encrypt data using the RC4 stream cipher.
        May refer to encryption used for data or files."},{"name":"Encrypts network
        communications with RC4","description":"Can encrypt data using the RC4 stream
        cipher as part of network communications."},{"name":"Enumerates windows","description":"Capable
        of enumerating the windows. "},{"name":"Executes commands from the command
        line","description":"Capable of executing a command-line command (as opposed
        to executing a file)."},{"name":"Executes using a scheduled task","description":"Capable
        of execution via a scheduled task"},{"name":"Execution by Windows API","description":"Capable
        of execution via the Windows API"},{"name":"File manipulation","description":"Capabilities
        associated with operations on files. \"Parent\" aspect used to contain specific
        sub-aspects."},{"name":"Finds a process","description":"Capable of finding
        a process"},{"name":"Gets common file path","description":"Capable of getting
        or retrieving the common file path. "},{"name":"Gets environmental variable
        value","description":"Capable of getting or retrieving an environmental variable"},{"name":"HTTP
        request capabilities","description":"Capable of making or receiving an HTTP
        request. "},{"name":"Lists processes","description":"Capable of listing running
        processes."},{"name":"Lists processes","description":"Capable of listing running
        processes."},{"name":"Loads or downloads data","description":"Can load (or
        download) data"},{"name":"Loads or downloads plugins","description":"Can load
        (or download) additional plugins, such as DLL modules."},{"name":"Locks files","description":"Can
        lock files on a victim system."},{"name":"Performs process injection","description":"Capable
        of process injection, or uses APIs associated with injecting code into another
        process."},{"name":"Persistence via Windows registry Run key","description":"Capable
        of persistence via a Windows registry Run keys."},{"name":"Persistence via
        shortcut","description":"Capable of persistence within a shortcut"},{"name":"Persists
        via a scheduled task","description":"Capable of persistence via the creation
        of a scheduled task."},{"name":"Persists via the Windows Startup folder","description":"Capable
        of persistence via the Windows ''Startup'' folder."},{"name":"Query Windows
        registry key","description":"Capable of querying Windows registry keys or
        values. "},{"name":"Query Windows registry key values","description":"Capable
        of querying Windows registry key values. "},{"name":"Sleep","description":"The
        binary can sleep for a specified period of time."},{"name":"Specialized C2
        capabilities","description":"Capabilities associated with malware command
        and control (C2) activity. Used to denote things like the use of legitimate
        web sites or services as part of C2. \"Parent\" aspect used to contain specific
        sub-aspects."},{"name":"Terminates processes","description":"Capable of killing
        a running process."},{"name":"Timestomping capabilities","description":"Capable
        of antiforensic techniques by modifying timestamps to reflect bogus values."},{"name":"Uses
        LZNT1 decompression","description":"Can decompress content using the lznt1
        compression library. May refer to decompression used for data, files, or as
        part of network communications."},{"name":"Uses hard-coded configuration data","description":"Capable
        of obtaining configuration data (including C2 locations) from data that is
        hard-coded within the binary."},{"name":"Writes Windows registry values","description":"Capable
        of writing Windows registry values."}],"cve":[],"roles":["Downloader"]}'
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 79048c4d2b2e57eb-IAD
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 27 Jan 2023 21:23:11 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      - Origin
      content-length:
      - '11711'
      x-amzn-trace-id:
      - fde6e0d72c4eaf6220b7756da03b6cec
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Cookie:
      - __cf_bm=6Ck3v1.bORRZCDv9LL9iMOp1gEeyIgsZKbidQscF5bM-1674854591-0-AVaAndjbOZ+lbspUWg+vg0iYmMsCnw7/n0hz8nGKikESdaF8KnRJhhsQs2OFKM5l9sWtZTMG/ybTtTj09bpCgKE=
      User-Agent:
      - python-requests/2.28.1
      X-App-Name:
      - MA-TI-Python-Lib-v0.1
    method: GET
    uri: https://api.intelligence.mandiant.com/v4/malware/malware--bc1aac4f-7b86-537d-8e37-840218794b8e/attack-pattern
  response:
    body:
      string: "{\n    \"malware\": [\n        {\n            \"id\": \"malware--bc1aac4f-7b86-537d-8e37-840218794b8e\",\n
        \           \"name\": \"SMOKELOADER\",\n            \"type\": \"malware-mitre\",\n
        \           \"attack-patterns\": {\n                \"Impact\": [\n                    {\n
        \                       \"id\": \"attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c\"\n
        \                   },\n                    {\n                        \"id\":
        \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\"\n                    }\n
        \               ],\n                \"Persistence\": [\n                    {\n
        \                       \"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--cc89ecbd-3d33-4a41-bcca-001e702d18fd\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\"\n
        \                           },\n                            {\n                                \"id\":
        \"attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179\"\n                            }\n
        \                       ]\n                    }\n                ],\n                \"Execution\":
        [\n                    {\n                        \"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\"\n
        \                   },\n                    {\n                        \"id\":
        \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\",\n                        \"sub_techniques\":
        [\n                            {\n                                \"id\":
        \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\"\n                            }\n
        \                       ]\n                    },\n                    {\n
        \                       \"id\": \"attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670\"\n
        \                   }\n                ],\n                \"Resource Development\":
        [\n                    {\n                        \"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--e7cbc1de-1f79-48ee-abfd-da1241c65a15\"\n
        \                           }\n                        ]\n                    }\n
        \               ],\n                \"Privilege Escalation\": [\n                    {\n
        \                       \"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\"\n
        \                   },\n                    {\n                        \"id\":
        \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\",\n                        \"sub_techniques\":
        [\n                            {\n                                \"id\":
        \"attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4\"\n                            },\n
        \                           {\n                                \"id\": \"attack-pattern--d201d4cc-214d-4a74-a1ba-b3fa09fd4591\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--cc89ecbd-3d33-4a41-bcca-001e702d18fd\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\"\n
        \                           },\n                            {\n                                \"id\":
        \"attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179\"\n                            }\n
        \                       ]\n                    }\n                ],\n                \"Defense
        Evasion\": [\n                    {\n                        \"id\": \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\"\n
        \                   },\n                    {\n                        \"id\":
        \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\"\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4\"\n
        \                           },\n                            {\n                                \"id\":
        \"attack-pattern--d201d4cc-214d-4a74-a1ba-b3fa09fd4591\"\n                            }\n
        \                       ]\n                    },\n                    {\n
        \                       \"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\"\n
        \                   },\n                    {\n                        \"id\":
        \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\",\n                        \"sub_techniques\":
        [\n                            {\n                                \"id\":
        \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\"\n                            },\n
        \                           {\n                                \"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\"\n
        \                           }\n                        ]\n                    }\n
        \               ],\n                \"Credential Access\": [\n                    {\n
        \                       \"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\"\n
        \                           }\n                        ]\n                    }\n
        \               ],\n                \"Discovery\": [\n                    {\n
        \                       \"id\": \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\"\n
        \                   },\n                    {\n                        \"id\":
        \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\"\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\"\n
        \                   },\n                    {\n                        \"id\":
        \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\"\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\"\n
        \                   },\n                    {\n                        \"id\":
        \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\"\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\"\n
        \                   },\n                    {\n                        \"id\":
        \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\"\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\"\n
        \                   }\n                ],\n                \"Collection\":
        [\n                    {\n                        \"id\": \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\"\n
        \                   },\n                    {\n                        \"id\":
        \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\"\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\"\n
        \                   }\n                ],\n                \"Command and Control\":
        [\n                    {\n                        \"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\",\n
        \                       \"sub_techniques\": [\n                            {\n
        \                               \"id\": \"attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41\"\n
        \                           }\n                        ]\n                    },\n
        \                   {\n                        \"id\": \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\"\n
        \                   },\n                    {\n                        \"id\":
        \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\",\n                        \"sub_techniques\":
        [\n                            {\n                                \"id\":
        \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\"\n                            }\n
        \                       ]\n                    },\n                    {\n
        \                       \"id\": \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\"\n
        \                   },\n                    {\n                        \"id\":
        \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\"\n                    }\n
        \               ]\n            },\n            \"is_publishable\": true\n
        \       }\n    ],\n    \"attack-patterns\": {\n        \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-03-06T20:57:37.959Z\",\n            \"name\": \"System Checks\",\n
        \           \"attack_pattern_identifier\": \"T1497.001\",\n            \"description\":
        \"Adversaries may employ various system checks to detect and avoid virtualization
        and analysis environments. This may include changing behaviors based on the
        results of checks for the presence of artifacts indicative of a virtual machine
        environment (VME) or sandbox. If the adversary detects a VME, they may alter
        their malware to disengage from the victim or conceal the core functions of
        the implant. They may also search for VME artifacts before dropping secondary
        or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox
        Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery
        to shape follow-on behaviors. \\n\\nSpecific checks may will vary based on
        the target and/or adversary, but may involve behaviors such as [Windows Management
        Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001),
        [System Information Discovery](https://attack.mitre.org/techniques/T1082),
        and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain
        system information and search for VME artifacts. Adversaries may search for
        VME artifacts in memory, processes, file system, hardware, and/or the Registry.
        Adversaries may use scripting to automate these checks  into one script and
        then have the program exit if it determines the system to be a virtual environment.
        \\n\\nChecks could include generic system properties such as uptime and samples
        of network traffic. Adversaries may also check the network adapters addresses,
        CPU core count, and available memory/drive size. \\n\\nOther common checks
        may enumerate services running that are unique to these applications, installed
        programs on the system, manufacturer/product fields for strings relating to
        virtual machine applications, and VME-specific hardware/processor instructions.(Citation:
        McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also
        use a special I/O port to send commands and receive output. \\n \\nHardware
        checks, such as the presence of the fan, temperature, and audio devices, could
        also be used to gather evidence that can be indicative a virtual environment.
        Adversaries may also query for specific readings from these devices.(Citation:
        Unit 42 OilRig Sept 2018)\",\n            \"modified\": \"2020-07-01T16:32:02.514Z\",\n
        \           \"id\": \"attack-pattern--29be378d-262d-4e99-b00d-852d573628e6\"\n
        \       },\n        \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2020-10-01T01:30:00.877Z\",\n            \"name\": \"Develop Capabilities\",\n
        \           \"attack_pattern_identifier\": \"T1587\",\n            \"description\":
        \"Before compromising a victim, adversaries may build capabilities that can
        be used during targeting. Rather than purchasing, freely downloading, or stealing
        capabilities, adversaries may develop their own capabilities in-house. This
        is the process of identifying development requirements and building solutions
        such as malware, exploits, and self-signed certificates. Adversaries may develop
        capabilities to support their operations throughout numerous phases of the
        adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation:
        Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)\\n\\nAs
        with legitimate development efforts, different skill sets may be required
        for developing capabilities. The skills needed may be located in-house, or
        may need to be contracted out. Use of a contractor may be considered an extension
        of that adversary's development capabilities, provided the adversary plays
        a role in shaping requirements and maintains a degree of exclusivity to the
        capability.\",\n            \"modified\": \"2020-10-22T18:18:08.552Z\",\n
        \           \"id\": \"attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf\"\n
        \       },\n        \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-01-31T12:42:44.103Z\",\n            \"name\": \"Timestomp\",\n            \"attack_pattern_identifier\":
        \"T1070.006\",\n            \"modified\": \"2020-03-29T21:39:46.724Z\",\n
        \           \"description\": \"Adversaries may modify file time attributes
        to hide new or changes to existing files. Timestomping is a technique that
        modifies the timestamps of a file (the modify, access, create, and change
        times), often to mimic files that are in the same folder. This is done, for
        example, on files that have been modified or created by the adversary so that
        they do not appear conspicuous to forensic investigators or file analysis
        tools.\\n\\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036)
        to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)\",\n
        \           \"id\": \"attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611\"\n
        \       },\n        \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:31:10.728Z\",\n            \"name\": \"Non-Application Layer
        Protocol\",\n            \"attack_pattern_identifier\": \"T1095\",\n            \"modified\":
        \"2020-10-21T19:41:49.412Z\",\n            \"description\": \"Adversaries
        may use a non-application layer protocol for communication between host and
        C2 server or among infected hosts within a network. The list of possible protocols
        is extensive.(Citation: Wikipedia OSI) Specific examples include use of network
        layer protocols, such as the Internet Control Message Protocol (ICMP), transport
        layer protocols, such as the User Datagram Protocol (UDP), session layer protocols,
        such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such
        as Serial over LAN (SOL).\\n\\nICMP communication between hosts is one example.(Citation:
        Cisco Synful Knock Evolution)\\n Because ICMP is part of the Internet Protocol
        Suite, it is required to be implemented by all IP-compatible hosts; (Citation:
        Microsoft ICMP) however, it is not as commonly monitored as other Internet
        Protocols such as TCP or UDP and may be used by adversaries to hide communications.\",\n
        \           \"id\": \"attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b\"\n
        \       },\n        \"attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2019-03-14T18:47:17.701Z\",\n            \"name\": \"Data Destruction\",\n
        \           \"attack_pattern_identifier\": \"T1485\",\n            \"description\":
        \"Adversaries may destroy data and files on specific systems or in large numbers
        on a network to interrupt availability to systems, services, and network resources.
        Data destruction is likely to render stored data irrecoverable by forensic
        techniques through overwriting files or data on local and remote drives.(Citation:
        Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo
        Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit
        42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating
        system file deletion commands such as <code>del</code> and <code>rm</code>
        often only remove pointers to files without wiping the contents of the files
        themselves, making the files recoverable by proper forensic methodology. This
        behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001)
        and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because
        individual files are destroyed rather than sections of a storage disk or the
        disk's logical structure.\\n\\nAdversaries may attempt to overwrite files
        and directories with randomly generated data to make it irrecoverable.(Citation:
        Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) In some cases
        politically oriented image files have been used to overwrite data.(Citation:
        FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation:
        Kaspersky StoneDrill 2017)\\n\\nTo maximize impact on the target organization
        in operations where network-wide availability interruption is the goal, malware
        designed for destroying data may have worm-like features to propagate across
        a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078),
        [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows
        Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec
        Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon
        Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Talos Olympic Destroyer
        2018)\",\n            \"modified\": \"2020-03-27T21:08:19.783Z\",\n            \"id\":
        \"attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c\"\n        },\n        \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:48.323Z\",\n            \"name\": \"Input Capture\",\n
        \           \"attack_pattern_identifier\": \"T1056\",\n            \"description\":
        \"Adversaries may use methods of capturing user input to obtain credentials
        or collect information. During normal system usage, users often provide credentials
        to various different locations, such as login pages/portals or system dialog
        boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential
        API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving
        the user into providing input into what they believe to be a genuine service
        (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).\",\n
        \           \"modified\": \"2020-10-21T01:31:35.760Z\",\n            \"id\":
        \"attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2\"\n        },\n        \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-01-23T22:02:48.566Z\",\n            \"name\": \"Registry Run Keys /
        Startup Folder\",\n            \"attack_pattern_identifier\": \"T1547.001\",\n
        \           \"description\": \"Adversaries may achieve persistence by adding
        a program to a startup folder or referencing it with a Registry run key. Adding
        an entry to the \\\"run keys\\\" in the Registry or startup folder will cause
        the program referenced to be executed when a user logs in. (Citation: Microsoft
        Run Key) These programs will be executed under the context of the user and
        will have the account's associated permissions level.\\n\\nPlacing a program
        within a startup folder will also cause that program to execute when a user
        logs in. There is a startup folder location for individual user accounts as
        well as a system-wide startup folder that will be checked regardless of which
        user account logs in. The startup folder path for the current user is <code>C:\\\\Users\\\\[Username]\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start
        Menu\\\\Programs\\\\Startup</code>. The startup folder path for all users
        is <code>C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\StartUp</code>.\\n\\nThe
        following run keys are created by default on Windows systems:\\n\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>\\n*
        <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce</code>\\n*
        <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run</code>\\n*
        <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce</code>\\n\\nRun
        keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation:
        Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx</code>
        is also available but is not created by default on Windows Vista and newer.
        Registry run key entries can reference programs directly or list them as a
        dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible
        to load a DLL at logon using a \\\"Depend\\\" key with RunOnceEx: <code>reg
        add HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\0001\\\\Depend
        /v 1 /d \\\"C:\\\\temp\\\\evil[.]dll\\\"</code> (Citation: Oddvar Moe RunOnceEx
        Mar 2018)\\n\\nThe following Registry keys can be used to set startup folder
        items for persistence:\\n\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User
        Shell Folders</code>\\n* <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell
        Folders</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell
        Folders</code>\\n* <code>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User
        Shell Folders</code>\\n\\nThe following Registry keys can control automatic
        startup of services during boot:\\n\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce</code>\\n*
        <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce</code>\\n*
        <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices</code>\\n*
        <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices</code>\\n\\nUsing
        policy settings to specify startup programs creates corresponding values in
        either of two Registry keys:\\n\\n* <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run</code>\\n*
        <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run</code>\\n\\nThe
        Winlogon key controls actions that occur when a user logs on to a computer
        running Windows 7. Most of these actions are under the control of the operating
        system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows
        NT\\\\CurrentVersion\\\\Winlogon\\\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows
        NT\\\\CurrentVersion\\\\Winlogon\\\\Shell</code> subkeys can automatically
        launch programs.\\n\\nPrograms listed in the load value of the registry key
        <code>HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows</code>
        run when any user logs on.\\n\\nBy default, the multistring <code>BootExecute</code>
        value of the registry key <code>HKEY_LOCAL_MACHINE\\\\System\\\\CurrentControlSet\\\\Control\\\\Session
        Manager</code> is set to <code>autocheck autochk *</code>. This value causes
        Windows, at startup, to check the file-system integrity of the hard disks
        if the system has been shut down abnormally. Adversaries can add other programs
        or processes to this registry value which will automatically launch at boot.\\n\\nAdversaries
        can use these configuration locations to execute malware, such as remote access
        tools, to maintain persistence through system reboots. Adversaries may also
        use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the
        Registry entries look as if they are associated with legitimate programs.\",\n
        \           \"modified\": \"2020-08-03T16:30:26.918Z\",\n            \"id\":
        \"attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279\"\n        },\n        \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-02-11T18:58:11.791Z\",\n            \"name\": \"Keylogging\",\n            \"attack_pattern_identifier\":
        \"T1056.001\",\n            \"description\": \"Adversaries may log user keystrokes
        to intercept credentials as the user types them. Keylogging is likely to be
        used to acquire credentials for new access opportunities when [OS Credential
        Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective,
        and may require an adversary to intercept keystrokes on a system for a substantial
        period of time before credentials can be successfully captured.\\n\\nKeylogging
        is the most prevalent type of input capture, with many different ways of intercepting
        keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\\n\\n*
        Hooking API callbacks used for processing keystrokes. Unlike [Credential API
        Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely
        on API functions intended for processing keystroke data.\\n* Reading raw keystroke
        data from the hardware buffer.\\n* Windows Registry modifications.\\n* Custom
        drivers.\\n* [Modify System Image](https://attack.mitre.org/techniques/T1601)
        may provide adversaries with hooks into the operating system of network devices
        to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device
        Attacks) \",\n            \"modified\": \"2020-10-21T01:30:56.227Z\",\n            \"id\":
        \"attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4\"\n        },\n        \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2019-11-27T14:58:00.429Z\",\n            \"name\": \"Scheduled Task\",\n
        \           \"attack_pattern_identifier\": \"T1053.005\",\n            \"description\":
        \"Adversaries may abuse the Windows Task Scheduler to perform task scheduling
        for initial or recurring execution of malicious code. There are multiple ways
        to access the Task Scheduler in Windows. The <code>schtasks</code> can be
        run directly on the command line, or the Task Scheduler can be opened through
        the GUI within the Administrator Tools section of the Control Panel. In some
        cases, adversaries have used a .NET wrapper for the Windows Task Scheduler,
        and alternatively, adversaries have used the Windows netapi32 library to create
        a scheduled task.\\n\\nThe deprecated [at](https://attack.mitre.org/software/S0110)
        utility could also be abused by adversaries (ex: [At (Windows)](https://attack.mitre.org/techniques/T1053/002)),
        though <code>at.exe</code> can not access tasks created with <code>schtasks</code>
        or the Control Panel.\\n\\nAn adversary may use Windows Task Scheduler to
        execute programs at system startup or on a scheduled basis for persistence.
        The Windows Task Scheduler can also be abused to conduct remote Execution
        as part of Lateral Movement and or to run a process under the context of a
        specified account (such as SYSTEM).\",\n            \"modified\": \"2020-03-24T13:45:03.730Z\",\n
        \           \"id\": \"attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9\"\n
        \       },\n        \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2020-01-22T21:04:23.285Z\",\n            \"name\": \"Event Triggered Execution\",\n
        \           \"attack_pattern_identifier\": \"T1546\",\n            \"description\":
        \"Adversaries may establish persistence and/or elevate privileges using system
        mechanisms that trigger execution based on specific events. Various operating
        systems have means to monitor and subscribe to events such as logons or other
        user activity such as running specific applications/binaries. \\n\\nAdversaries
        may abuse these mechanisms as a means of maintaining persistent access to
        a victim via repeatedly executing malicious code. After gaining access to
        a victim system, adversaries may create/modify event triggers to point to
        malicious content that will be executed whenever the event trigger is invoked.(Citation:
        FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia
        malware)\\n\\nSince the execution can be proxied by an account with higher
        permissions, such as SYSTEM or service accounts, an adversary may be able
        to abuse these triggered execution mechanisms to escalate their privileges.
        \",\n            \"modified\": \"2020-10-21T18:48:27.576Z\",\n            \"id\":
        \"attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db\"\n        },\n        \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:31:08.479Z\",\n            \"name\": \"Proxy\",\n            \"attack_pattern_identifier\":
        \"T1090\",\n            \"description\": \"Adversaries may use a connection
        proxy to direct network traffic between systems or act as an intermediary
        for network communications to a command and control server to avoid direct
        connections to their infrastructure. Many tools exist that enable traffic
        redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040),
        ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries
        use these types of proxies to manage command and control communications, reduce
        the number of simultaneous outbound network connections, provide resiliency
        in the face of connection loss, or to ride over existing trusted communications
        paths between victims to avoid suspicion. Adversaries may chain together multiple
        proxies to further disguise the source of malicious traffic.\\n\\nAdversaries
        can also take advantage of routing schemes in Content Delivery Networks (CDNs)
        to proxy command and control traffic.\",\n            \"modified\": \"2020-10-21T17:54:28.531Z\",\n
        \           \"id\": \"attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea\"\n
        \       },\n        \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:46.977Z\",\n            \"name\": \"Scheduled Task/Job\",\n
        \           \"attack_pattern_identifier\": \"T1053\",\n            \"modified\":
        \"2020-10-14T15:20:01.069Z\",\n            \"description\": \"Adversaries
        may abuse task scheduling functionality to facilitate initial or recurring
        execution of malicious code. Utilities exist within all major operating systems
        to schedule programs or scripts to be executed at a specified date and time.
        A task can also be scheduled on a remote system, provided the proper authentication
        is met (ex: RPC and file and printer sharing in Windows environments). Scheduling
        a task on a remote system typically requires being a member of an admin or
        otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler
        Security)\\n\\nAdversaries may use task scheduling to execute programs at
        system startup or on a scheduled basis for persistence. These mechanisms can
        also be abused to run a process under the context of a specified account (such
        as one with elevated permissions/privileges).\",\n            \"id\": \"attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9\"\n
        \       },\n        \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-02-20T21:01:25.428Z\",\n            \"name\": \"Archive via Utility\",\n
        \           \"attack_pattern_identifier\": \"T1560.001\",\n            \"modified\":
        \"2020-03-25T21:54:37.374Z\",\n            \"description\": \"An adversary
        may compress or encrypt data that is collected prior to exfiltration using
        3rd party utilities. Many utilities exist that can archive data, including
        7-Zip(Citation: 7zip Homepage), WinRAR(Citation: WinRAR Homepage), and WinZip(Citation:
        WinZip Homepage). Most utilities include functionality to encrypt and/or compress
        data.\\n\\nSome 3rd party utilities may be preinstalled, such as `tar` on
        Linux and macOS or `zip` on Windows systems.\",\n            \"id\": \"attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662\"\n
        \       },\n        \"attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-01-14T17:21:54.470Z\",\n            \"name\": \"Process Hollowing\",\n
        \           \"attack_pattern_identifier\": \"T1055.012\",\n            \"description\":
        \"Adversaries may inject malicious code into suspended and hollowed processes
        in order to evade process-based defenses. Process hollowing is a method of
        executing arbitrary code in the address space of a separate live process.
        \ \\n\\nProcess hollowing is commonly performed by creating a process in a
        suspended state then unmapping/hollowing its memory, which can then be replaced
        with malicious code. A victim process can be created with native Windows API
        calls such as <code>CreateProcess</code>, which includes a flag to suspend
        the processes primary thread. At this point the process can be unmapped using
        APIs calls such as <code>ZwUnmapViewOfSection</code> or <code>NtUnmapViewOfSection</code>
        \ before being written to, realigned to the injected code, and resumed via
        <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>,
        then <code>ResumeThread</code> respectively.(Citation: Leitch Hollowing)(Citation:
        Endgame Process Injection July 2017)\\n\\nThis is very similar to [Thread
        Local Storage](https://attack.mitre.org/techniques/T1055/005) but creates
        a new process rather than targeting an existing process. This behavior will
        likely not result in elevated privileges since the injected process was spawned
        from (and thus inherits the security context) of the injecting process. However,
        execution via process hollowing may also evade detection from security products
        since the execution is masked under a legitimate process. \",\n            \"modified\":
        \"2020-06-20T22:28:08.758Z\",\n            \"id\": \"attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4\"\n
        \       },\n        \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2020-02-26T17:41:25.933Z\",\n            \"name\": \"Hide Artifacts\",\n
        \           \"attack_pattern_identifier\": \"T1564\",\n            \"description\":
        \"Adversaries may attempt to hide artifacts associated with their behaviors
        to evade detection. Operating systems may have features to hide various artifacts,
        such as important system files and administrative task execution, to avoid
        disrupting user work environments and prevent users from changing files or
        features on the system. Adversaries may abuse these features to hide artifacts
        such as files, directories, user accounts, or other system activity to evade
        detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation:
        MalwareBytes ADS July 2015)\\n\\nAdversaries may also attempt to hide artifacts
        associated with malicious behavior by creating computing regions that are
        isolated from common security instrumentation, such as through the use of
        virtualization technology.(Citation: Sophos Ragnar May 2020)\",\n            \"modified\":
        \"2020-09-23T11:31:50.636Z\",\n            \"id\": \"attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8\"\n
        \       },\n        \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:35.733Z\",\n            \"name\": \"System Owner/User Discovery\",\n
        \           \"attack_pattern_identifier\": \"T1033\",\n            \"modified\":
        \"2020-03-15T01:03:47.866Z\",\n            \"description\": \"Adversaries
        may attempt to identify the primary user, currently logged in user, set of
        users that commonly uses a system, or whether a user is actively using the
        system. They may do this, for example, by retrieving account usernames or
        by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003).
        The information may be collected in a number of different ways using other
        Discovery techniques, because user and username details are prevalent throughout
        a system and include running process ownership, file/directory ownership,
        session information, and system logs. Adversaries may use the information
        from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033)
        during automated discovery to shape follow-on behaviors, including whether
        or not the adversary fully infects the target and/or attempts specific actions.\\n\\nUtilities
        and commands that acquire this information include <code>whoami</code>. In
        Mac and Linux, the currently logged in user can be identified with <code>w</code>
        and <code>who</code>.\",\n            \"id\": \"attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104\"\n
        \       },\n        \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-01-31T12:35:36.479Z\",\n            \"name\": \"File Deletion\",\n
        \           \"attack_pattern_identifier\": \"T1070.004\",\n            \"description\":
        \"Adversaries may delete files left behind by the actions of their intrusion
        activity. Malware, tools, or other non-native files dropped or created on
        a system by an adversary may leave traces to indicate to what was done within
        a network and how. Removal of these files can occur during an intrusion, or
        as part of a post-intrusion process to minimize the adversary's footprint.\\n\\nThere
        are tools available from the host operating system to perform cleanup, but
        adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106)
        functions such as DEL, secure deletion tools such as Windows Sysinternals
        SDelete, or other third-party file deletion tools. (Citation: Trend Micro
        APT Attack Tools)\",\n            \"modified\": \"2020-03-29T21:34:16.209Z\",\n
        \           \"id\": \"attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c\"\n
        \       },\n        \"attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:31:17.472Z\",\n            \"name\": \"Native API\",\n            \"attack_pattern_identifier\":
        \"T1106\",\n            \"modified\": \"2020-07-01T16:19:54.646Z\",\n            \"description\":
        \"Adversaries may directly interact with the native OS application programming
        interface (API) to execute behaviors. Native APIs provide a controlled means
        of calling low-level OS services within the kernel, such as those involving
        hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation:
        Linux Kernel API) These native APIs are leveraged by the OS during system
        boot (when other system components are not yet initialized) as well as carrying
        out tasks and requests during routine operations.\\n\\nFunctionality provided
        by native APIs are often also exposed to user-mode applications via interfaces
        and libraries. For example, functions such as the Windows API <code>CreateProcess()</code>
        or GNU <code>fork()</code> will allow programs and scripts to start other
        processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may
        allow API callers to execute a binary, run a CLI command, load modules, etc.
        as thousands of similar API functions exist for various system operations.(Citation:
        Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)\\n\\nHigher level software
        frameworks, such as Microsoft .NET and macOS Cocoa, are also available to
        interact with native APIs. These frameworks typically provide language wrappers/abstractions
        to API functionalities and are designed for ease-of-use/portability of code.(Citation:
        Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation:
        macOS Foundation)\\n\\nAdversaries may abuse these native API functions as
        a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059),
        the native API and its hierarchy of interfaces, provide mechanisms to interact
        with and utilize various components of a victimized system.\",\n            \"id\":
        \"attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670\"\n        },\n        \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:48.728Z\",\n            \"name\": \"Process Discovery\",\n
        \           \"attack_pattern_identifier\": \"T1057\",\n            \"modified\":
        \"2020-03-26T18:05:53.130Z\",\n            \"description\": \"Adversaries
        may attempt to get information about running processes on a system. Information
        obtained could be used to gain an understanding of common software/applications
        running on systems within the network. Adversaries may use the information
        from [Process Discovery](https://attack.mitre.org/techniques/T1057) during
        automated discovery to shape follow-on behaviors, including whether or not
        the adversary fully infects the target and/or attempts specific actions.\\n\\nIn
        Windows environments, adversaries could obtain details on running processes
        using the [Tasklist](https://attack.mitre.org/software/S0057) utility via
        [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code>
        via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information
        about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106)
        calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this
        is accomplished with the <code>ps</code> command. Adversaries may also opt
        to enumerate processes via /proc.\",\n            \"id\": \"attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580\"\n
        \       },\n        \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:56.776Z\",\n            \"name\": \"Application Layer Protocol\",\n
        \           \"attack_pattern_identifier\": \"T1071\",\n            \"description\":
        \"Adversaries may communicate using application layer protocols to avoid detection/network
        filtering by blending in with existing traffic. Commands to the remote system,
        and often the results of those commands, will be embedded within the protocol
        traffic between the client and server. \\n\\nAdversaries may utilize many
        different protocols, including those used for web browsing, transferring files,
        electronic mail, or DNS. For connections that occur internally within an enclave
        (such as those between a proxy or pivot node and other nodes), commonly used
        protocols are SMB, SSH, or RDP. \",\n            \"modified\": \"2020-10-21T16:35:45.986Z\",\n
        \           \"id\": \"attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6\"\n
        \       },\n        \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2019-10-04T20:42:28.541Z\",\n            \"name\": \"System Shutdown/Reboot\",\n
        \           \"attack_pattern_identifier\": \"T1529\",\n            \"modified\":
        \"2020-03-27T21:18:48.149Z\",\n            \"description\": \"Adversaries
        may shutdown/reboot systems to interrupt access to, or aid in the destruction
        of, those systems. Operating systems may contain commands to initiate a shutdown/reboot
        of a machine. In some cases, these commands may also be used to initiate a
        shutdown/reboot of a remote computer.(Citation: Microsoft Shutdown Oct 2017)
        Shutting down or rebooting systems may disrupt access to computer resources
        for legitimate users.\\n\\nAdversaries may attempt to shutdown/reboot a system
        after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002)
        or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to
        hasten the intended effects on system availability.(Citation: Talos Nyetya
        June 2017)(Citation: Talos Olympic Destroyer 2018)\",\n            \"id\":
        \"attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc\"\n        },\n        \"attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-03-16T15:45:17.032Z\",\n            \"name\": \"Symmetric Cryptography\",\n
        \           \"attack_pattern_identifier\": \"T1573.001\",\n            \"description\":
        \"Adversaries may employ a known symmetric encryption algorithm to conceal
        command and control traffic rather than relying on any inherent protections
        provided by a communication protocol. Symmetric encryption algorithms use
        the same key for plaintext encryption and ciphertext decryption. Common symmetric
        encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.\",\n            \"modified\":
        \"2020-03-26T21:25:37.306Z\",\n            \"id\": \"attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41\"\n
        \       },\n        \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2019-09-16T17:52:44.147Z\",\n            \"name\": \"Software Discovery\",\n
        \           \"attack_pattern_identifier\": \"T1518\",\n            \"description\":
        \"Adversaries may attempt to get a listing of software and software versions
        that are installed on a system or in a cloud environment. Adversaries may
        use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518)
        during automated discovery to shape follow-on behaviors, including whether
        or not the adversary fully infects the target and/or attempts specific actions.\\n\\nAdversaries
        may attempt to enumerate software for a variety of reasons, such as figuring
        out what security measures are present or if the compromised system has a
        version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).\",\n
        \           \"modified\": \"2020-09-16T19:36:17.133Z\",\n            \"id\":
        \"attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58\"\n        },\n        \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:49.546Z\",\n            \"name\": \"Command and Scripting
        Interpreter\",\n            \"attack_pattern_identifier\": \"T1059\",\n            \"description\":
        \"Adversaries may abuse command and script interpreters to execute commands,
        scripts, or binaries. These interfaces and languages provide ways of interacting
        with computer systems and are a common feature across many different platforms.
        Most systems come with some built-in command-line interface and scripting
        capabilities, for example, macOS and Linux distributions include some flavor
        of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows
        installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003)
        and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\\n\\nThere
        are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006),
        as well as those commonly associated with client applications such as [JavaScript/JScript](https://attack.mitre.org/techniques/T1059/007)
        and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\\n\\nAdversaries
        may abuse these technologies in various ways as a means of executing arbitrary
        commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001)
        payloads delivered to victims as lure documents or as secondary payloads downloaded
        from an existing C2. Adversaries may also execute commands through interactive
        terminals/shells.\",\n            \"modified\": \"2020-10-22T16:43:39.362Z\",\n
        \           \"id\": \"attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830\"\n
        \       },\n        \"attack-pattern--cc89ecbd-3d33-4a41-bcca-001e702d18fd\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-01-24T14:52:25.589Z\",\n            \"name\": \"AppInit DLLs\",\n            \"attack_pattern_identifier\":
        \"T1546.010\",\n            \"description\": \"Adversaries may establish persistence
        and/or elevate privileges by executing malicious content triggered by AppInit
        DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified
        in the <code>AppInit_DLLs</code> value in the Registry keys <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows
        NT\\\\CurrentVersion\\\\Windows</code> or <code>HKEY_LOCAL_MACHINE\\\\Software\\\\Wow6432Node\\\\Microsoft\\\\Windows
        NT\\\\CurrentVersion\\\\Windows</code> are loaded by user32.dll into every
        process that loads user32.dll. In practice this is nearly every program, since
        user32.dll is a very common library. (Citation: Endgame Process Injection
        July 2017)\\n\\nSimilar to Process Injection, these values can be abused to
        obtain elevated privileges by causing a malicious DLL to be loaded and run
        in the context of separate processes on the computer. (Citation: AppInit Registry)
        Malicious AppInit DLLs may also provide persistence by continuously being
        triggered by API activity. \\n\\nThe AppInit DLL functionality is disabled
        in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit
        Secure Boot)\",\n            \"modified\": \"2020-03-24T20:34:09.996Z\",\n
        \           \"id\": \"attack-pattern--cc89ecbd-3d33-4a41-bcca-001e702d18fd\"\n
        \       },\n        \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:47.843Z\",\n            \"name\": \"Process Injection\",\n
        \           \"attack_pattern_identifier\": \"T1055\",\n            \"description\":
        \"Adversaries may inject code into processes in order to evade process-based
        defenses as well as possibly elevate privileges. Process injection is a method
        of executing arbitrary code in the address space of a separate live process.
        Running code in the context of another process may allow access to the process's
        memory, system/network resources, and possibly elevated privileges. Execution
        via process injection may also evade detection from security products since
        the execution is masked under a legitimate process. \\n\\nThere are many different
        ways to inject code into a process, many of which abuse legitimate functionalities.
        These implementations exist for every major OS but are typically platform
        specific. \\n\\nMore sophisticated samples may perform multiple process injections
        to segment modules and further evade detection, utilizing named pipes or other
        inter-process communication (IPC) mechanisms as a communication channel. \",\n
        \           \"modified\": \"2020-06-20T22:28:45.651Z\",\n            \"id\":
        \"attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d\"\n        },\n        \"attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-02-05T16:27:37.784Z\",\n            \"name\": \"Code Signing\",\n            \"attack_pattern_identifier\":
        \"T1553.002\",\n            \"description\": \"Adversaries may create, acquire,
        or steal code signing materials to sign their malware or tools. Code signing
        provides a level of authenticity on a binary from the developer and a guarantee
        that the binary has not been tampered with. (Citation: Wikipedia Code Signing)
        The certificates used during an operation may be created, acquired, or stolen
        by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec
        Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001),
        this activity will result in a valid signature.\\n\\nCode signing to verify
        software on first run can be used on modern Windows and macOS/OS X systems.
        It is not used on Linux due to the decentralized nature of the platform. (Citation:
        Wikipedia Code Signing) \\n\\nCode signing certificates may be used to bypass
        security policies that require signed code to execute on a system. \",\n            \"modified\":
        \"2020-02-10T19:51:01.601Z\",\n            \"id\": \"attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082\"\n
        \       },\n        \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-12-14T16:46:06.044Z\",\n            \"name\": \"Deobfuscate/Decode
        Files or Information\",\n            \"attack_pattern_identifier\": \"T1140\",\n
        \           \"description\": \"Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027)
        to hide artifacts of an intrusion from analysis. They may require separate
        mechanisms to decode or deobfuscate that information depending on how they
        intend to use it. Methods for doing that include built-in functionality of
        malware or by using utilities present on the system.\\n\\nOne such example
        is use of [certutil](https://attack.mitre.org/software/S0160) to decode a
        remote access tool portable executable file that has been hidden inside a
        certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia)
        Another example is using the Windows <code>copy /b</code> command to reassemble
        binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation
        Sept 2016)\\n\\nSometimes a user's action may be required to open it for deobfuscation
        or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204).
        The user may also be required to input a password to open a password protected
        compressed/encrypted file that was provided by the adversary. (Citation: Volexity
        PowerDuke November 2016)\",\n            \"modified\": \"2020-07-09T14:42:23.122Z\",\n
        \           \"id\": \"attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c\"\n
        \       },\n        \"attack-pattern--d201d4cc-214d-4a74-a1ba-b3fa09fd4591\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-01-14T01:34:10.588Z\",\n            \"name\": \"Proc Memory\",\n            \"attack_pattern_identifier\":
        \"T1055.009\",\n            \"description\": \"Adversaries may inject malicious
        code into processes via the /proc filesystem in order to evade process-based
        defenses as well as possibly elevate privileges. Proc memory injection is
        a method of executing arbitrary code in the address space of a separate live
        process. \\n\\nProc memory injection involves enumerating the memory of a
        process via the /proc filesystem (<code>/proc/[pid]</code>) then crafting
        a return-oriented programming (ROP) payload with available gadgets/instructions.
        Each running process has its own directory, which includes memory mappings.
        Proc memory injection is commonly performed by overwriting the target processes\\u2019
        stack using memory mappings provided by the /proc filesystem. This information
        can be used to enumerate offsets (including the stack) and gadgets (or instructions
        within the program that can be used to build a malicious payload) otherwise
        hidden by process memory protections such as address space layout randomization
        (ASLR). Once enumerated, the target processes\\u2019 memory map within <code>/proc/[pid]/maps</code>
        can be overwritten using dd.(Citation: Uninformed Needle)(Citation: GDS Linux
        Injection)(Citation: DD Man) \\n\\nOther techniques such as [LD_PRELOAD](https://attack.mitre.org/techniques/T1574/006)
        may be used to populate a target process with more available gadgets. Similar
        to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), proc
        memory injection may target child processes (such as a backgrounded copy of
        sleep).(Citation: GDS Linux Injection) \\n\\nRunning code in the context of
        another process may allow access to the process's memory, system/network resources,
        and possibly elevated privileges. Execution via proc memory injection may
        also evade detection from security products since the execution is masked
        under a legitimate process. \",\n            \"modified\": \"2020-06-20T22:25:55.331Z\",\n
        \           \"id\": \"attack-pattern--d201d4cc-214d-4a74-a1ba-b3fa09fd4591\"\n
        \       },\n        \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:55.892Z\",\n            \"name\": \"Indicator Removal on
        Host\",\n            \"attack_pattern_identifier\": \"T1070\",\n            \"description\":
        \"Adversaries may delete or alter generated artifacts on a host system, including
        logs or captured files such as quarantined malware. Locations and format of
        logs are platform or product-specific, however standard operating system logs
        are captured as Windows events or Linux/macOS files such as [Bash History](https://attack.mitre.org/techniques/T1139)
        and /var/log/*.\\n\\nThese actions may interfere with event collection, reporting,
        or other notifications used to detect intrusion activity. This that may compromise
        the integrity of security solutions by causing notable events to go unreported.
        This activity may also impede forensic analysis and incident response, due
        to lack of sufficient data to determine what occurred.\",\n            \"modified\":
        \"2020-10-16T18:09:49.074Z\",\n            \"id\": \"attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69\"\n
        \       },\n        \"attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-10-01T01:41:08.652Z\",\n            \"name\": \"Code Signing Certificates\",\n
        \           \"attack_pattern_identifier\": \"T1587.002\",\n            \"description\":
        \"Before compromising a victim, adversaries may create self-signed code signing
        certificates that can be used during targeting. Code signing is the process
        of digitally signing executables and scripts to confirm the software author
        and guarantee that the code has not been altered or corrupted. Code signing
        provides a level of authenticity for a program from the developer and a guarantee
        that the program has not been tampered with.(Citation: Wikipedia Code Signing)
        Users and/or security tools may trust a signed piece of code more than an
        unsigned piece of code even if they don't know who issued the certificate
        or who the author is.\\n\\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002),
        adversaries may develop self-signed code signing certificates for use in operations.\",\n
        \           \"modified\": \"2020-10-15T01:15:54.945Z\",\n            \"id\":
        \"attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf\"\n        },\n        \"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:31:25.967Z\",\n            \"name\": \"Clipboard Data\",\n
        \           \"attack_pattern_identifier\": \"T1115\",\n            \"description\":
        \"Adversaries may collect data stored in the clipboard from users copying
        information within or between applications. \\n\\nIn Windows, Applications
        can access clipboard data by using the Windows API.(Citation: MSDN Clipboard)
        OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation:
        Operating with EmPyre)\",\n            \"modified\": \"2020-04-23T18:35:58.230Z\",\n
        \           \"id\": \"attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f\"\n
        \       },\n        \"attack-pattern--e7cbc1de-1f79-48ee-abfd-da1241c65a15\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-10-01T02:11:47.237Z\",\n            \"name\": \"Code Signing Certificates\",\n
        \           \"attack_pattern_identifier\": \"T1588.003\",\n            \"description\":
        \"Before compromising a victim, adversaries may buy and/or steal code signing
        certificates that can be used during targeting. Code signing is the process
        of digitally signing executables and scripts to confirm the software author
        and guarantee that the code has not been altered or corrupted. Code signing
        provides a level of authenticity for a program from the developer and a guarantee
        that the program has not been tampered with.(Citation: Wikipedia Code Signing)
        Users and/or security tools may trust a signed piece of code more than an
        unsigned piece of code even if they don't know who issued the certificate
        or who the author is.\\n\\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002),
        adversaries may purchase or steal code signing certificates for use in operations.
        The purchase of code signing certificates may be done using a front organization
        or using information stolen from a previously compromised entity that allows
        the adversary to validate to a certificate provider as that entity. Adversaries
        may also steal code signing materials directly from a compromised third-party.\",\n
        \           \"modified\": \"2020-10-22T18:22:21.007Z\",\n            \"id\":
        \"attack-pattern--e7cbc1de-1f79-48ee-abfd-da1241c65a15\"\n        },\n        \"attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2020-02-05T14:54:07.588Z\",\n            \"name\": \"Subvert Trust Controls\",\n
        \           \"attack_pattern_identifier\": \"T1553\",\n            \"description\":
        \"Adversaries may undermine security controls that will either warn users
        of untrusted activity or prevent execution of untrusted programs. Operating
        systems and security products may contain mechanisms to identify programs
        or websites as possessing some level of trust. Examples of such features would
        include a program being allowed to run because it is signed by a valid code
        signing certificate, a program prompting the user with a warning because it
        has an attribute set from being downloaded from the Internet, or getting an
        indication that you are about to connect to an untrusted site.\\n\\nAdversaries
        may attempt to subvert these trust mechanisms. The method adversaries use
        will depend on the specific mechanism they seek to subvert. Adversaries may
        conduct [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222)
        or [Modify Registry](https://attack.mitre.org/techniques/T1112) in support
        of subverting these controls.(Citation: SpectorOps Subverting Trust Sept 2017)
        Adversaries may also create or steal code signing certificates to acquire
        trust on target systems.(Citation: Securelist Digital Certificates)(Citation:
        Symantec Digital Certificates) \",\n            \"modified\": \"2020-06-20T22:42:26.314Z\",\n
        \           \"id\": \"attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7\"\n
        \       },\n        \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:31:16.408Z\",\n            \"name\": \"Ingress Tool Transfer\",\n
        \           \"attack_pattern_identifier\": \"T1105\",\n            \"modified\":
        \"2020-03-20T15:42:48.595Z\",\n            \"description\": \"Adversaries
        may transfer tools or other files from an external system into a compromised
        environment. Files may be copied from an external adversary controlled system
        through the command and control channel to bring tools into the victim network
        or through alternate protocols with another tool such as FTP. Files can also
        be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\",\n
        \           \"id\": \"attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add\"\n
        \       },\n        \"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-02-10T19:49:46.752Z\",\n            \"name\": \"Invalid Code Signature\",\n
        \           \"attack_pattern_identifier\": \"T1036.001\",\n            \"modified\":
        \"2020-02-10T19:52:47.724Z\",\n            \"description\": \"Adversaries
        may attempt to mimic features of valid code signatures to increase the chance
        of deceiving a user, analyst, or tool. Code signing provides a level of authenticity
        on a binary from the developer and a guarantee that the binary has not been
        tampered with. Adversaries can copy the metadata and signature information
        from a signed program, then use it as a template for an unsigned program.
        Files with invalid code signatures will fail digital signature validation
        checks, but they may appear more legitimate to users and security tools may
        improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\\n\\nUnlike
        [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity
        will not result in a valid signature.\",\n            \"id\": \"attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52\"\n
        \       },\n        \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:27.342Z\",\n            \"name\": \"System Network Configuration
        Discovery\",\n            \"attack_pattern_identifier\": \"T1016\",\n            \"description\":
        \"Adversaries may look for details about the network configuration and settings
        of systems they access or through information discovery of remote systems.
        Several operating system administration utilities exist that can be used to
        gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099),
        [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101),
        [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\\n\\nAdversaries
        may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016)
        during automated discovery to shape follow-on behaviors, including whether
        or not the adversary fully infects the target and/or attempts specific actions.\",\n
        \           \"modified\": \"2020-03-15T00:55:33.136Z\",\n            \"id\":
        \"attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0\"\n        },\n        \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2018-04-18T17:59:24.739Z\",\n            \"name\": \"Data from Information
        Repositories\",\n            \"attack_pattern_identifier\": \"T1213\",\n            \"description\":
        \"Adversaries may leverage information repositories to mine valuable information.
        Information repositories are tools that allow for storage of information,
        typically to facilitate collaboration or information sharing between users,
        and can store a wide variety of data that may aid adversaries in further objectives,
        or direct access to the target information.\\n\\nThe following is a brief
        list of example information that may hold potential value to an adversary
        and may also be found on an information repository:\\n\\n* Policies, procedures,
        and standards\\n* Physical / logical network diagrams\\n* System architecture
        diagrams\\n* Technical system documentation\\n* Testing / development credentials\\n*
        Work / project schedules\\n* Source code snippets\\n* Links to network shares
        and other internal resources\\n\\nInformation stored in a repository may vary
        based on the specific instance or environment. Specific common information
        repositories include [Sharepoint](https://attack.mitre.org/techniques/T1213/002),
        [Confluence](https://attack.mitre.org/techniques/T1213/001), and enterprise
        databases such as SQL Server.\",\n            \"modified\": \"2020-10-12T12:16:55.085Z\",\n
        \           \"id\": \"attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416\"\n
        \       },\n        \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:31:04.307Z\",\n            \"name\": \"System Information
        Discovery\",\n            \"attack_pattern_identifier\": \"T1082\",\n            \"modified\":
        \"2020-03-26T18:17:42.298Z\",\n            \"description\": \"An adversary
        may attempt to get detailed information about the operating system and hardware,
        including version, patches, hotfixes, service packs, and architecture. Adversaries
        may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082)
        during automated discovery to shape follow-on behaviors, including whether
        or not the adversary fully infects the target and/or attempts specific actions.\\n\\nTools
        such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used
        to gather detailed system information. A breakdown of system data can also
        be gathered through the macOS <code>systemsetup</code> command, but it requires
        administrative privileges.\\n\\nInfrastructure as a Service (IaaS) cloud providers
        such as AWS, GCP, and Azure allow access to instance and virtual machine information
        via APIs. Successful authenticated API calls can return data such as the operating
        system platform and status of a particular instance or the model view of a
        virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances
        Resource)(Citation: Microsoft Virutal Machine API)\",\n            \"id\":
        \"attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1\"\n        },\n        \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:38.511Z\",\n            \"name\": \"Masquerading\",\n            \"attack_pattern_identifier\":
        \"T1036\",\n            \"description\": \"Adversaries may attempt to manipulate
        features of their artifacts to make them appear legitimate or benign to users
        and/or security tools. Masquerading occurs when the name or location of an
        object, legitimate or malicious, is manipulated or abused for the sake of
        evading defenses and observation. This may include manipulating file metadata,
        tricking users into misidentifying the file type, and giving legitimate task
        or service names.\\n\\nRenaming abusable system utilities to evade security
        monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation:
        LOLBAS Main Site)\",\n            \"modified\": \"2020-07-09T13:54:28.727Z\",\n
        \           \"id\": \"attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0\"\n
        \       },\n        \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-02-05T14:17:46.686Z\",\n            \"name\": \"Software Packing\",\n
        \           \"attack_pattern_identifier\": \"T1027.002\",\n            \"description\":
        \"Adversaries may perform software packing or virtual machine software protection
        to conceal their code. Software packing is a method of compressing or encrypting
        an executable. Packing an executable changes the file signature in an attempt
        to avoid signature-based detection. Most decompression techniques decompress
        the executable code in memory. Virtual machine software protection translates
        an executable's original code into a special format that only a special virtual
        machine can run. A virtual machine is then called to run this code.(Citation:
        ESET FinFisher Jan 2018) \\n\\nUtilities used to perform software packing
        are called packers. Example packers are MPRESS and UPX. A more comprehensive
        list of known packers is available, (Citation: Wikipedia Exe Compression)
        but adversaries may create their own packing techniques that do not leave
        the same artifacts as well-known packers to evade defenses.  \",\n            \"modified\":
        \"2020-02-05T20:05:41.548Z\",\n            \"id\": \"attack-pattern--deb98323-e13f-4b0c-8d94-175379069062\"\n
        \       },\n        \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:31:04.710Z\",\n            \"name\": \"File and Directory
        Discovery\",\n            \"attack_pattern_identifier\": \"T1083\",\n            \"modified\":
        \"2020-09-16T16:02:16.770Z\",\n            \"description\": \"Adversaries
        may enumerate files and directories or may search in specific locations of
        a host or network share for certain information within a file system. Adversaries
        may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083)
        during automated discovery to shape follow-on behaviors, including whether
        or not the adversary fully infects the target and/or attempts specific actions.\\n\\nMany
        command shell utilities can be used to obtain this information. Examples include
        <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and
        <code>locate</code>. (Citation: Windows Commands JPCERT) Custom tools may
        also be used to gather file and directory information and interact with the
        [Native API](https://attack.mitre.org/techniques/T1106).\",\n            \"id\":
        \"attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18\"\n        },\n        \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2019-04-17T22:22:24.505Z\",\n            \"name\": \"Virtualization/Sandbox
        Evasion\",\n            \"attack_pattern_identifier\": \"T1497\",\n            \"modified\":
        \"2020-07-01T16:32:02.272Z\",\n            \"description\": \"Adversaries
        may employ various means to detect and avoid virtualization and analysis environments.
        This may include changing behaviors based on the results of checks for the
        presence of artifacts indicative of a virtual machine environment (VME) or
        sandbox. If the adversary detects a VME, they may alter their malware to disengage
        from the victim or conceal the core functions of the implant. They may also
        search for VME artifacts before dropping secondary or additional payloads.
        Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497)
        during automated discovery to shape follow-on behaviors. \\n\\nAdversaries
        may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497)
        such as checking for security monitoring tools (e.g., Sysinternals, Wireshark,
        etc.) or other system artifacts associated with analysis or virtualization.
        Adversaries may also check for legitimate user activity to help determine
        if it is in an analysis environment. Additional methods include use of sleep
        timers or loops within malware code to avoid operating within a temporary
        sandbox.(Citation: Unit 42 Pirpi July 2015)\\n\\n\",\n            \"id\":
        \"attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d\"\n        },\n        \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2020-02-20T20:53:45.725Z\",\n            \"name\": \"Archive Collected Data\",\n
        \           \"attack_pattern_identifier\": \"T1560\",\n            \"description\":
        \"An adversary may compress and/or encrypt data that is collected prior to
        exfiltration. Compressing the data can help to obfuscate the collected data
        and minimize the amount of data sent over the network. Encryption can be used
        to hide information that is being exfiltrated from detection or make exfiltration
        less conspicuous upon inspection by a defender.\\n\\nBoth compression and
        encryption are done prior to exfiltration, and can be performed using a utility,
        3rd party library, or custom method.\",\n            \"modified\": \"2020-10-21T16:36:55.831Z\",\n
        \           \"id\": \"attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a\"\n
        \       },\n        \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-03-15T16:13:46.151Z\",\n            \"name\": \"Web Protocols\",\n
        \           \"attack_pattern_identifier\": \"T1071.001\",\n            \"description\":
        \"Adversaries may communicate using application layer protocols associated
        with web traffic to avoid detection/network filtering by blending in with
        existing traffic. Commands to the remote system, and often the results of
        those commands, will be embedded within the protocol traffic between the client
        and server. \\n\\nProtocols such as HTTP and HTTPS that carry web traffic
        may be very common in environments. HTTP/S packets have many fields and headers
        in which data can be concealed. An adversary may abuse these protocols to
        communicate with systems under their control within a victim network while
        also mimicking normal, expected traffic. \",\n            \"modified\": \"2020-03-26T20:15:35.821Z\",\n
        \           \"id\": \"attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161\"\n
        \       },\n        \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-03-13T20:26:49.433Z\",\n            \"name\": \"Hidden Window\",\n
        \           \"attack_pattern_identifier\": \"T1564.003\",\n            \"description\":
        \"Adversaries may use hidden windows to conceal malicious activity from the
        plain sight of users. In some cases, windows that would typically be displayed
        when an application carries out an operation can be hidden. This may be utilized
        by system administrators to avoid disrupting user work environments when carrying
        out administrative tasks. \\n\\nOn Windows, there are a variety of features
        in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001),
        Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005)
        to make windows hidden. One example of this is <code>powershell.exe -WindowStyle
        Hidden</code>. (Citation: PowerShell About 2019)\\n\\nSimilarly, on macOS
        the configurations for how applications run are listed in property list (plist)
        files. One of the tags in these files can be <code>apple.awt.UIElement</code>,
        which allows for Java applications to prevent the application's icon from
        appearing in the Dock. A common use for this is when applications run in the
        system tray, but don't also want to show up in the Dock.\\n\\nAdversaries
        may abuse these functionalities to hide otherwise visible windows from users
        so as not to alert the user to adversary activity on the system.(Citation:
        Antiquated Mac Malware)\",\n            \"modified\": \"2020-03-29T22:49:43.557Z\",\n
        \           \"id\": \"attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0\"\n
        \       },\n        \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:24.512Z\",\n            \"name\": \"Application Window
        Discovery\",\n            \"attack_pattern_identifier\": \"T1010\",\n            \"description\":
        \"Adversaries may attempt to get a listing of open application windows. Window
        listings could convey information about how the system is used or give context
        to information collected by a keylogger.\",\n            \"modified\": \"2020-03-26T15:44:27.068Z\",\n
        \           \"id\": \"attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830\"\n
        \       },\n        \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2020-01-23T17:46:59.535Z\",\n            \"name\": \"Boot or Logon Autostart
        Execution\",\n            \"attack_pattern_identifier\": \"T1547\",\n            \"description\":
        \"Adversaries may configure system settings to automatically execute a program
        during system boot or logon to maintain persistence or gain higher-level privileges
        on compromised systems. Operating systems may have mechanisms for automatically
        running a program on system boot or account logon.(Citation: Microsoft Run
        Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation:
        Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming)\\u00a0
        These mechanisms may include automatically executing programs that are placed
        in specially designated directories or are referenced by repositories that
        store configuration information, such as the Windows Registry. An adversary
        may achieve the same goal by modifying or extending features of the kernel.\\n\\nSince
        some boot or logon autostart programs run with higher privileges, an adversary
        may leverage these to elevate privileges.\",\n            \"modified\": \"2020-10-09T16:05:36.772Z\",\n
        \           \"id\": \"attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf\"\n
        \       },\n        \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-12-14T16:46:06.044Z\",\n            \"name\": \"Access Token Manipulation\",\n
        \           \"attack_pattern_identifier\": \"T1134\",\n            \"description\":
        \"Adversaries may modify access tokens to operate under a different user or
        system security context to perform actions and bypass access controls. Windows
        uses access tokens to determine the ownership of a running process. A user
        can manipulate access tokens to make a running process appear as though it
        is the child of a different process or belongs to someone other than the user
        that started the process. When this occurs, the process also takes on the
        security context associated with the new token.\\n\\nAn adversary can use
        built-in Windows API functions to copy access tokens from existing processes;
        this is known as token stealing. These token can then be applied to an existing
        process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001))
        or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)).
        An adversary must already be in a privileged user context (i.e. administrator)
        to steal a token. However, adversaries commonly use token stealing to elevate
        their security context from the administrator level to the SYSTEM level. An
        adversary can then use a token to authenticate to a remote system as the account
        for that token if the account has appropriate permissions on the remote system.(Citation:
        Pentestlab Token Manipulation)\\n\\nAny standard user can use the <code>runas</code>
        command, and the Windows API functions, to create impersonation tokens; it
        does not require access to an administrator account. There are also other
        mechanisms, such as Active Directory fields, that can be used to modify access
        tokens.\",\n            \"modified\": \"2020-04-16T19:37:02.355Z\",\n            \"id\":
        \"attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48\"\n        },\n        \"attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179\":
        {\n            \"x_mitre_is_subtechnique\": true,\n            \"created\":
        \"2020-01-24T19:00:32.917Z\",\n            \"name\": \"Shortcut Modification\",\n
        \           \"attack_pattern_identifier\": \"T1547.009\",\n            \"description\":
        \"Adversaries may create or edit shortcuts to run a program during system
        boot or user login. Shortcuts or symbolic links are ways of referencing other
        files or programs that will be opened or executed when the shortcut is clicked
        or executed by a system startup process.\\n\\nAdversaries could use shortcuts
        to execute their tools for persistence. They may create a new shortcut as
        a means of indirection that may use [Masquerading](https://attack.mitre.org/techniques/T1036)
        to look like a legitimate program. Adversaries could also edit the target
        path or entirely replace an existing shortcut so their tools will be executed
        instead of the intended legitimate program.\",\n            \"modified\":
        \"2020-03-25T17:21:27.487Z\",\n            \"id\": \"attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179\"\n
        \       },\n        \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:32.662Z\",\n            \"name\": \"Obfuscated Files or
        Information\",\n            \"attack_pattern_identifier\": \"T1027\",\n            \"description\":
        \"Adversaries may attempt to make an executable or file difficult to discover
        or analyze by encrypting, encoding, or otherwise obfuscating its contents
        on the system or in transit. This is common behavior that can be used across
        different platforms and the network to evade defenses. \\n\\nPayloads may
        be compressed, archived, or encrypted in order to avoid detection. These payloads
        may be used during Initial Access or later to mitigate detection. Sometimes
        a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)
        for [User Execution](https://attack.mitre.org/techniques/T1204). The user
        may also be required to input a password to open a password protected compressed/encrypted
        file that was provided by the adversary. (Citation: Volexity PowerDuke November
        2016) Adversaries may also used compressed or archived scripts, such as JavaScript.
        \\n\\nPortions of files can also be encoded to hide the plain-text strings
        that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A
        We Live Security Analysis) Payloads may also be split into separate, seemingly
        benign files that only reveal malicious functionality when reassembled. (Citation:
        Carbon Black Obfuscation Sept 2016)\\n\\nAdversaries may also obfuscate commands
        executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).
        Environment variables, aliases, characters, and other platform/language specific
        semantics can be used to evade signature based detections and application
        control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye
        Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)
        \",\n            \"modified\": \"2020-09-16T19:24:20.601Z\",\n            \"id\":
        \"attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a\"\n        },\n        \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:31:25.060Z\",\n            \"name\": \"Screen Capture\",\n
        \           \"attack_pattern_identifier\": \"T1113\",\n            \"description\":
        \"Adversaries may attempt to take screen captures of the desktop to gather
        information over the course of an operation. Screen capturing functionality
        may be included as a feature of a remote access tool used in post-compromise
        operations. Taking a screenshot is also typically possible through native
        utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>,
        or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated
        Mac Malware)\\n\",\n            \"modified\": \"2020-03-24T19:56:37.627Z\",\n
        \           \"id\": \"attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688\"\n
        \       },\n        \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:31:06.988Z\",\n            \"name\": \"Account Discovery\",\n
        \           \"attack_pattern_identifier\": \"T1087\",\n            \"description\":
        \"Adversaries may attempt to get a listing of accounts on a system or within
        an environment. This information can help adversaries determine which accounts
        exist to aid in follow-on behavior.\",\n            \"modified\": \"2020-09-16T15:10:18.260Z\",\n
        \           \"id\": \"attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08\"\n
        \       },\n        \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2020-03-16T15:33:01.739Z\",\n            \"name\": \"Encrypted Channel\",\n
        \           \"attack_pattern_identifier\": \"T1573\",\n            \"modified\":
        \"2020-03-30T00:37:16.809Z\",\n            \"description\": \"Adversaries
        may employ a known encryption algorithm to conceal command and control traffic
        rather than relying on any inherent protections provided by a communication
        protocol. Despite the use of a secure algorithm, these implementations may
        be vulnerable to reverse engineering if secret keys are encoded and/or generated
        within malware samples/configuration files.\",\n            \"id\": \"attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118\"\n
        \       },\n        \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:30:25.584Z\",\n            \"name\": \"Query Registry\",\n
        \           \"attack_pattern_identifier\": \"T1012\",\n            \"description\":
        \"Adversaries may interact with the Windows Registry to gather information
        about the system, configuration, and installed software.\\n\\nThe Registry
        contains a significant amount of information about the operating system, configuration,
        software, and security.(Citation: Wikipedia Windows Registry) Information
        can easily be queried using the [Reg](https://attack.mitre.org/software/S0075)
        utility, though other means to access the Registry exist. Some of the information
        may help adversaries to further their operation within a network. Adversaries
        may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012)
        during automated discovery to shape follow-on behaviors, including whether
        or not the adversary fully infects the target and/or attempts specific actions.\",\n
        \           \"modified\": \"2020-03-26T18:08:20.049Z\",\n            \"id\":
        \"attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896\"\n        },\n        \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2017-05-31T21:31:23.587Z\",\n            \"name\": \"Modify Registry\",\n
        \           \"attack_pattern_identifier\": \"T1112\",\n            \"description\":
        \"Adversaries may interact with the Windows Registry to hide configuration
        information within Registry keys, remove information as part of cleaning up,
        or as part of other techniques to aid in persistence and execution.\\n\\nAccess
        to specific areas of the Registry depends on account permissions, some requiring
        administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075)
        may be used for local or remote Registry modification. (Citation: Microsoft
        Reg) Other tools may also be used, such as a remote access tool, which may
        contain functionality to interact with the Registry through the Windows API.\\n\\nRegistry
        modifications may also include actions to hide keys, such as prepending key
        names with a null character, which will cause an error and/or be ignored when
        read via [Reg](https://attack.mitre.org/software/S0075) or other utilities
        using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may
        abuse these pseudo-hidden keys to conceal payloads/commands used to maintain
        persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps
        Hiding Reg Jul 2017)\\n\\nThe Registry of a remote system may be modified
        to aid in execution of files as part of lateral movement. It requires the
        remote Registry service to be running on the target system. (Citation: Microsoft
        Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078)
        are required, along with access to the remote system's [SMB/Windows Admin
        Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.\",\n
        \           \"modified\": \"2020-08-13T20:02:49.641Z\",\n            \"id\":
        \"attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4\"\n        },\n        \"attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1\":
        {\n            \"x_mitre_is_subtechnique\": false,\n            \"created\":
        \"2020-10-01T01:56:24.776Z\",\n            \"name\": \"Obtain Capabilities\",\n
        \           \"attack_pattern_identifier\": \"T1588\",\n            \"description\":
        \"Before compromising a victim, adversaries may buy and/or steal capabilities
        that can be used during targeting. Rather than developing their own capabilities
        in-house, adversaries may purchase, freely download, or steal them. Activities
        may include the acquisition of malware, software (including licenses), exploits,
        certificates, and information relating to vulnerabilities. Adversaries may
        obtain capabilities to support their operations throughout numerous phases
        of the adversary lifecycle.\\n\\nIn addition to downloading free malware,
        software, and exploits from the internet, adversaries may purchase these capabilities
        from third-party entities. Third-party entities can include technology companies
        that specialize in malware and exploits, criminal marketplaces, or from individuals.(Citation:
        NationsBuying)(Citation: PegasusCitizenLab)\\n\\nIn addition to purchasing
        capabilities, adversaries may steal capabilities from third-party entities
        (including other adversaries). This can include stealing software licenses,
        malware, SSL/TLS and code-signing certificates, or raiding closed databases
        of vulnerabilities or exploits.(Citation: DiginotarCompromise)\",\n            \"modified\":
        \"2020-10-22T18:22:21.135Z\",\n            \"id\": \"attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1\"\n
        \       }\n    }\n}"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 79048c4d9bb057eb-IAD
      Cache-Control:
      - max-age=3600, must-revalidate, private
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Jan 2023 21:23:11 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Transfer-Encoding:
      - chunked
      Vary:
      - Origin
      - Accept-Encoding
      - Authorization
      X-Api-Proxy:
      - '1'
      content-length:
      - '95260'
      x-amzn-trace-id:
      - 89de3c9e72387de75406307ca219dc11
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Cookie:
      - __cf_bm=6Ck3v1.bORRZCDv9LL9iMOp1gEeyIgsZKbidQscF5bM-1674854591-0-AVaAndjbOZ+lbspUWg+vg0iYmMsCnw7/n0hz8nGKikESdaF8KnRJhhsQs2OFKM5l9sWtZTMG/ybTtTj09bpCgKE=
      User-Agent:
      - python-requests/2.28.1
      X-App-Name:
      - MA-TI-Python-Lib-v0.1
    method: GET
    uri: https://api.intelligence.mandiant.com/v4/malware/malware--bc1aac4f-7b86-537d-8e37-840218794b8e/campaigns
  response:
    body:
      string: '{"campaigns":[],"total_count":0,"id":"malware--bc1aac4f-7b86-537d-8e37-840218794b8e","name":"SMOKELOADER","last_transformed":"2023-01-27T02:27:32.566Z","last_activity_time":"2023-01-27T02:20:01Z"}

        '
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 79048c4e4c5357eb-IAD
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 27 Jan 2023 21:23:11 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Transfer-Encoding:
      - chunked
      Vary:
      - Origin
      content-length:
      - '197'
      x-amzn-trace-id:
      - 2ece972a91e595d932634358b11d7524
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Cookie:
      - __cf_bm=6Ck3v1.bORRZCDv9LL9iMOp1gEeyIgsZKbidQscF5bM-1674854591-0-AVaAndjbOZ+lbspUWg+vg0iYmMsCnw7/n0hz8nGKikESdaF8KnRJhhsQs2OFKM5l9sWtZTMG/ybTtTj09bpCgKE=
      User-Agent:
      - python-requests/2.28.1
      X-App-Name:
      - MA-TI-Python-Lib-v0.1
    method: GET
    uri: https://api.intelligence.mandiant.com/v4/malware/malware--bc1aac4f-7b86-537d-8e37-840218794b8e/reports
  response:
    body:
      string: "{\n    \"reports\": [\n        {\n            \"id\": \"report--6324eae3-0e11-5c7d-a113-0f121472ddd3\",\n
        \           \"report_id\": \"19-00013267\",\n            \"title\": \"Modified
        Version of SmokeLoader Indicates Actor Is Bypassing Payments to the Vendor\",\n
        \           \"published_date\": \"August 09, 2019 02:02:41 PM\",\n            \"report_type\":
        \"Event Coverage/Implication\",\n            \"version\": \"1.0\",\n            \"audience\":
        [\n                {\n                    \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--bdba4d4a-6159-5b79-bd01-f78aefbfddf4\",\n
        \           \"report_id\": \"16-00020270\",\n            \"title\": \"SmokeLoader
        Malware Overview\",\n            \"published_date\": \"April 06, 2017 01:54:26
        PM\",\n            \"report_type\": \"Malware Overview\",\n            \"version\":
        \"3.1\",\n            \"audience\": [\n                {\n                    \"name\":
        \"cyber crime\",\n                    \"license\": \"INTEL_CYB_CRIME\"\n                },\n
        \               {\n                    \"name\": \"fusion\",\n                    \"license\":
        \"INTEL_RBI_FUS\"\n                },\n                {\n                    \"name\":
        \"operational\",\n                    \"license\": \"INTEL_RBI_OPS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--31c75bdb-041d-5f5b-9fa3-6581d70625bd\",\n
        \           \"report_id\": \"20-00016282\",\n            \"title\": \"Ongoing
        SILENTNIGHT Campaign Takes Aim at Users Based in Australia and Japan\",\n
        \           \"published_date\": \"August 13, 2020 09:41:14 PM\",\n            \"report_type\":
        \"Event Coverage/Implication\",\n            \"version\": \"1.3\",\n            \"audience\":
        [\n                {\n                    \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--9c4b7886-eed9-5738-8e72-dc7c4fd607c5\",\n
        \           \"report_id\": \"21-00025498\",\n            \"title\": \"Recently
        Observed Campaigns Using BAZARLOADER to Distribute ICEDID; Follow-On Activity
        May Lead to Ransomware Deployment \",\n            \"published_date\": \"December
        03, 2021 09:13:04 PM\",\n            \"report_type\": \"Event Coverage/Implication\",\n
        \           \"version\": \"1.0\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--48ec96e2-697c-557c-ad56-37204e17713d\",\n
        \           \"report_id\": \"21-00011500\",\n            \"title\": \"Industry
        Profile: Manufacturing (2021) \",\n            \"published_date\": \"June
        16, 2021 07:02:54 PM\",\n            \"report_type\": \"Industry Reporting\",\n
        \           \"version\": \"1.4\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"strategic\",\n                    \"license\":
        \"INTEL_RBI_EXEC\"\n                }\n            ]\n        },\n        {\n
        \           \"id\": \"report--6876a704-2b3b-574d-b550-de9daaff1df8\",\n            \"report_id\":
        \"21-00007566\",\n            \"title\": \"Semiannual Operational Technology
        Phishing Analysis: October 2020 \\u2013 March 2021\",\n            \"published_date\":
        \"April 08, 2021 12:38:52 PM\",\n            \"report_type\": \"Event Coverage/Implication\",\n
        \           \"version\": \"1.1\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber physical\",\n                    \"license\":
        \"INTEL_CYB_PHYS\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--f70d7517-f36e-5a5c-a7df-138cf21d4129\",\n
        \           \"report_id\": \"21-00003975\",\n            \"title\": \"Ongoing
        UNC2500 Campaigns Use Malicious Office Files to Distribute Various Payloads;
        Likely Provides Malware Distribution Service to Other Threat Actors\",\n            \"published_date\":
        \"March 03, 2021 10:41:25 PM\",\n            \"report_type\": \"Event Coverage/Implication\",\n
        \           \"version\": \"1.2\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--3dd840e3-1f1e-5e27-b260-4ed8cf417bc2\",\n
        \           \"report_id\": \"21-00011890\",\n            \"title\": \"Operational
        Technology Phishing Roundup: May 26 \\u2013 June 2, 2021\",\n            \"published_date\":
        \"June 03, 2021 01:39:24 PM\",\n            \"report_type\": \"Event Coverage/Implication\",\n
        \           \"version\": \"1.1\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber physical\",\n                    \"license\":
        \"INTEL_CYB_PHYS\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--0abaa751-f7d6-5cca-9ef4-a94e1788b3e1\",\n
        \           \"report_id\": \"19-00004036\",\n            \"title\": \"Supply
        Chain Compromise Trends, 2013\\u20132018\",\n            \"published_date\":
        \"March 23, 2022 07:27:27 PM\",\n            \"report_type\": \"Trends and
        Forecasting\",\n            \"version\": \"5.4\",\n            \"audience\":
        [\n                {\n                    \"name\": \"fusion\",\n                    \"license\":
        \"INTEL_RBI_FUS\"\n                },\n                {\n                    \"name\":
        \"strategic\",\n                    \"license\": \"INTEL_RBI_EXEC\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--04ea1af9-0aa3-5241-9f06-72cd52efd209\",\n
        \           \"report_id\": \"22-00013503\",\n            \"title\": \"Monthly
        Report on Cyber Crime Threats to the Financial Sector \\u2013 May 2022\",\n
        \           \"published_date\": \"June 08, 2022 03:59:55 PM\",\n            \"report_type\":
        \"Trends and Forecasting\",\n            \"version\": \"1.0\",\n            \"audience\":
        [\n                {\n                    \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--e4189cbb-93a1-53b6-a863-9f22f10de15b\",\n
        \           \"report_id\": \"20-00017707\",\n            \"title\": \"Country
        Profile: Ukraine (2020)\",\n            \"published_date\": \"September 26,
        2020 01:01:07 AM\",\n            \"report_type\": \"Country Profile\",\n            \"version\":
        \"1.2\",\n            \"audience\": [\n                {\n                    \"name\":
        \"strategic\",\n                    \"license\": \"INTEL_RBI_EXEC\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--2bfd2498-d82d-5dfb-89e5-3f554bb03367\",\n
        \           \"report_id\": \"21-00003422\",\n            \"title\": \"COVID-19
        Lure Used to Distribute SMOKELOADER Variant to Global Healthcare and Government
        Organizations; Linked to Caucasus Regional Cyber Espionage Activity\",\n            \"published_date\":
        \"February 11, 2021 01:49:57 AM\",\n            \"report_type\": \"Event Coverage/Implication\",\n
        \           \"version\": \"1.4\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber espionage\",\n                    \"license\":
        \"INTEL_CYB_ESP\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--56ee08b0-1eaf-509d-9008-ab43519e7263\",\n
        \           \"report_id\": \"22-00018671\",\n            \"title\": \"UNC3840
        Malware DENSEDROP Executes FRUITBIRD and a Second Highly Obfuscated Payload;
        FRUITBIRD Observed Delivering Multiple Payloads\",\n            \"published_date\":
        \"August 09, 2022 10:24:55 PM\",\n            \"report_type\": \"Event Coverage/Implication\",\n
        \           \"version\": \"1.0\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--73efe3bb-f7d8-5575-a6f9-91550333fca4\",\n
        \           \"report_id\": \"22-00022886\",\n            \"title\": \"Monthly
        Report on Cyber Crime Threats to the Financial Sector \\u2013 September 2022\",\n
        \           \"published_date\": \"October 07, 2022 07:04:51 PM\",\n            \"report_type\":
        \"Trends and Forecasting\",\n            \"version\": \"1.0\",\n            \"audience\":
        [\n                {\n                    \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--a0ce3c98-e2ff-5001-9a4c-1e0efe44d50d\",\n
        \           \"report_id\": \"20-00017322\",\n            \"title\": \"Monthly
        Report on Cyber Crime Threats to the Financial Sector \\u2013 August 2020\",\n
        \           \"published_date\": \"September 09, 2020 08:38:32 PM\",\n            \"report_type\":
        \"Trends and Forecasting\",\n            \"version\": \"1.3\",\n            \"audience\":
        [\n                {\n                    \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--f20af901-0cf2-545e-8fec-627e34b9b463\",\n
        \           \"report_id\": \"20-00011156\",\n            \"title\": \"Threat
        Activity Report: Campaign Distributes Ursnif to Customers of Japanese Companies
        via RIG Exploit Kit and Smoke Loader\",\n            \"published_date\": \"June
        24, 2020 04:26:47 PM\",\n            \"report_type\": \"Threat Activity Report\",\n
        \           \"version\": \"1.2\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--0bbcc947-a64e-5695-bbbe-11c1e5b61c0e\",\n
        \           \"report_id\": \"20-00021273\",\n            \"title\": \"Industry
        Intelligence July to September 2020: Retail\",\n            \"published_date\":
        \"October 20, 2020 04:14:39 PM\",\n            \"report_type\": \"Industry
        Intelligence Quarterly\",\n            \"version\": \"1.0\",\n            \"audience\":
        [\n                {\n                    \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"cyber espionage\",\n                    \"license\": \"INTEL_CYB_ESP\"\n
        \               },\n                {\n                    \"name\": \"cyber
        physical\",\n                    \"license\": \"INTEL_CYB_PHYS\"\n                },\n
        \               {\n                    \"name\": \"fusion\",\n                    \"license\":
        \"INTEL_RBI_FUS\"\n                },\n                {\n                    \"name\":
        \"operational\",\n                    \"license\": \"INTEL_RBI_OPS\"\n                },\n
        \               {\n                    \"name\": \"strategic\",\n                    \"license\":
        \"INTEL_RBI_EXEC\"\n                }\n            ]\n        },\n        {\n
        \           \"id\": \"report--56be7161-e740-53f9-8ded-8dfa431825bb\",\n            \"report_id\":
        \"20-00021280\",\n            \"title\": \"Industry Intelligence July to September
        2020: High Tech\",\n            \"published_date\": \"October 20, 2020 04:16:13
        PM\",\n            \"report_type\": \"Industry Intelligence Quarterly\",\n
        \           \"version\": \"1.0\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"cyber espionage\",\n                    \"license\": \"INTEL_CYB_ESP\"\n
        \               },\n                {\n                    \"name\": \"cyber
        physical\",\n                    \"license\": \"INTEL_CYB_PHYS\"\n                },\n
        \               {\n                    \"name\": \"fusion\",\n                    \"license\":
        \"INTEL_RBI_FUS\"\n                },\n                {\n                    \"name\":
        \"operational\",\n                    \"license\": \"INTEL_RBI_OPS\"\n                },\n
        \               {\n                    \"name\": \"strategic\",\n                    \"license\":
        \"INTEL_RBI_EXEC\"\n                }\n            ]\n        },\n        {\n
        \           \"id\": \"report--0ba26c1c-ad25-5b98-a821-b361fa2af057\",\n            \"report_id\":
        \"20-00021271\",\n            \"title\": \"Industry Intelligence July to September
        2020: Transportation\",\n            \"published_date\": \"October 20, 2020
        04:14:07 PM\",\n            \"report_type\": \"Industry Intelligence Quarterly\",\n
        \           \"version\": \"1.1\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"cyber espionage\",\n                    \"license\": \"INTEL_CYB_ESP\"\n
        \               },\n                {\n                    \"name\": \"cyber
        physical\",\n                    \"license\": \"INTEL_CYB_PHYS\"\n                },\n
        \               {\n                    \"name\": \"fusion\",\n                    \"license\":
        \"INTEL_RBI_FUS\"\n                },\n                {\n                    \"name\":
        \"operational\",\n                    \"license\": \"INTEL_RBI_OPS\"\n                },\n
        \               {\n                    \"name\": \"strategic\",\n                    \"license\":
        \"INTEL_RBI_EXEC\"\n                }\n            ]\n        },\n        {\n
        \           \"id\": \"report--61817617-0eb0-5f7b-ac11-91be3eee1593\",\n            \"report_id\":
        \"21-00024648\",\n            \"title\": \"Country Profile: Russia (2021)\",\n
        \           \"published_date\": \"December 15, 2021 05:37:47 PM\",\n            \"report_type\":
        \"Country Profile\",\n            \"version\": \"1.3\",\n            \"audience\":
        [\n                {\n                    \"name\": \"fusion\",\n                    \"license\":
        \"INTEL_RBI_FUS\"\n                },\n                {\n                    \"name\":
        \"strategic\",\n                    \"license\": \"INTEL_RBI_EXEC\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--eb5d3bbe-ade4-5b41-b829-86fdfb16d0a9\",\n
        \           \"report_id\": \"21-00000511\",\n            \"title\": \"Industry
        Profile: Retail (2021)\",\n            \"published_date\": \"February 10,
        2021 09:36:17 PM\",\n            \"report_type\": \"Industry Reporting\",\n
        \           \"version\": \"1.3\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"strategic\",\n                    \"license\":
        \"INTEL_RBI_EXEC\"\n                }\n            ]\n        },\n        {\n
        \           \"id\": \"report--82287858-6146-557f-ad03-eaddd6b5abd3\",\n            \"report_id\":
        \"20-00019853\",\n            \"title\": \"Monthly Report on Cyber Crime Threats
        to the Financial Sector \\u2013 September 2020\",\n            \"published_date\":
        \"October 16, 2020 05:51:56 PM\",\n            \"report_type\": \"Trends and
        Forecasting\",\n            \"version\": \"2.1\",\n            \"audience\":
        [\n                {\n                    \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--6398f8ff-dc2e-5cf2-9e3c-169a1acbea34\",\n
        \           \"report_id\": \"22-00009928\",\n            \"title\": \"Diamond
        (Hands) in the Rough: Threats to Cryptocurrencies\",\n            \"published_date\":
        \"June 13, 2022 06:29:53 PM\",\n            \"report_type\": \"Industry Reporting\",\n
        \           \"version\": \"1.0\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"fusion\",\n                    \"license\":
        \"INTEL_RBI_FUS\"\n                },\n                {\n                    \"name\":
        \"strategic\",\n                    \"license\": \"INTEL_RBI_EXEC\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--ba719d17-d170-5cf3-b480-f298d0085d15\",\n
        \           \"report_id\": \"21-00012276\",\n            \"title\": \"Trust
        Me, I'm a Professional: The Evolution and Commoditization of the Cyber Crime
        Ecosystem \",\n            \"published_date\": \"June 28, 2021 11:40:20 PM\",\n
        \           \"report_type\": \"Trends and Forecasting\",\n            \"version\":
        \"1.7\",\n            \"audience\": [\n                {\n                    \"name\":
        \"cyber crime\",\n                    \"license\": \"INTEL_CYB_CRIME\"\n                },\n
        \               {\n                    \"name\": \"fusion\",\n                    \"license\":
        \"INTEL_RBI_FUS\"\n                },\n                {\n                    \"name\":
        \"strategic\",\n                    \"license\": \"INTEL_RBI_EXEC\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--2dc158da-61db-51e2-897b-c1ca450b5c0c\",\n
        \           \"report_id\": \"22-00020526\",\n            \"title\": \"Country
        Profile: Germany (2022)\",\n            \"published_date\": \"October 03,
        2022 07:19:26 PM\",\n            \"report_type\": \"Country Profile\",\n            \"version\":
        \"2.1\",\n            \"audience\": [\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                },\n
        \               {\n                    \"name\": \"strategic\",\n                    \"license\":
        \"INTEL_RBI_EXEC\"\n                }\n            ]\n        },\n        {\n
        \           \"id\": \"report--49c91772-4139-59a9-ba3b-a916e4871764\",\n            \"report_id\":
        \"20-00021279\",\n            \"title\": \"Industry Intelligence July to September
        2020: Insurance\",\n            \"published_date\": \"October 20, 2020 04:16:01
        PM\",\n            \"report_type\": \"Industry Intelligence Quarterly\",\n
        \           \"version\": \"1.0\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"cyber espionage\",\n                    \"license\": \"INTEL_CYB_ESP\"\n
        \               },\n                {\n                    \"name\": \"cyber
        physical\",\n                    \"license\": \"INTEL_CYB_PHYS\"\n                },\n
        \               {\n                    \"name\": \"fusion\",\n                    \"license\":
        \"INTEL_RBI_FUS\"\n                },\n                {\n                    \"name\":
        \"operational\",\n                    \"license\": \"INTEL_RBI_OPS\"\n                },\n
        \               {\n                    \"name\": \"strategic\",\n                    \"license\":
        \"INTEL_RBI_EXEC\"\n                }\n            ]\n        },\n        {\n
        \           \"id\": \"report--98b11295-f207-5f30-83a3-b26f0b801aa5\",\n            \"report_id\":
        \"20-00026735\",\n            \"title\": \"Monthly Report on Cyber Crime Threats
        to the Financial Sector \\u2013 December 2020\",\n            \"published_date\":
        \"January 08, 2021 09:13:12 PM\",\n            \"report_type\": \"Trends and
        Forecasting\",\n            \"version\": \"1.5\",\n            \"audience\":
        [\n                {\n                    \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--5f2705e1-a698-52da-8cc2-8bc89bd84243\",\n
        \           \"report_id\": \"17-00004015\",\n            \"title\": \"Smoke
        Loader Malware Profile\",\n            \"published_date\": \"April 21, 2017
        08:17:56 PM\",\n            \"report_type\": \"Malware Profile\",\n            \"version\":
        \"1.1\",\n            \"audience\": [\n                {\n                    \"name\":
        \"cyber crime\",\n                    \"license\": \"INTEL_CYB_CRIME\"\n                },\n
        \               {\n                    \"name\": \"fusion\",\n                    \"license\":
        \"INTEL_RBI_FUS\"\n                },\n                {\n                    \"name\":
        \"operational\",\n                    \"license\": \"INTEL_RBI_OPS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--8a49a6a2-a41e-5fd6-8afc-20fba194f84a\",\n
        \           \"report_id\": \"20-00019709\",\n            \"title\": \"Country
        Profile: Israel (2020) \",\n            \"published_date\": \"October 08,
        2020 07:24:04 PM\",\n            \"report_type\": \"Country Profile\",\n            \"version\":
        \"1.1\",\n            \"audience\": [\n                {\n                    \"name\":
        \"strategic\",\n                    \"license\": \"INTEL_RBI_EXEC\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--43d0b50e-88a3-56eb-b27b-2d0b11b2596d\",\n
        \           \"report_id\": \"15-00014658\",\n            \"title\": \"Smoke
        Loader Malware Family\",\n            \"published_date\": \"December 23, 2015
        01:08:46 PM\",\n            \"report_type\": \"Malware Profile\",\n            \"version\":
        \"1.2\",\n            \"audience\": [\n                {\n                    \"name\":
        \"cyber crime\",\n                    \"license\": \"INTEL_CYB_CRIME\"\n                },\n
        \               {\n                    \"name\": \"fusion\",\n                    \"license\":
        \"INTEL_RBI_FUS\"\n                },\n                {\n                    \"name\":
        \"operational\",\n                    \"license\": \"INTEL_RBI_OPS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--59ce7286-76cf-5c78-946b-6b9d625c8fa0\",\n
        \           \"report_id\": \"20-00022481\",\n            \"title\": \"WICKER
        Stealer Distributed via Chanitor and SILENTNIGHT Among Others\",\n            \"published_date\":
        \"November 13, 2020 09:10:18 PM\",\n            \"report_type\": \"Event Coverage/Implication\",\n
        \           \"version\": \"1.2\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--4c74cd02-85ee-5374-9632-cb544e60295f\",\n
        \           \"report_id\": \"21-00007183\",\n            \"title\": \"Monthly
        Report on Cyber Crime Threats to the Financial Sector \\u2013 March 2021\",\n
        \           \"published_date\": \"September 22, 2021 09:54:38 PM\",\n            \"report_type\":
        \"Trends and Forecasting\",\n            \"version\": \"2.1\",\n            \"audience\":
        [\n                {\n                    \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--293e3e9e-982b-5827-aff3-e9d8eb53b6eb\",\n
        \           \"report_id\": \"21-00014287\",\n            \"title\": \"Industry
        Profile: Healthcare (2021)\",\n            \"published_date\": \"July 16,
        2021 02:52:29 PM\",\n            \"report_type\": \"Industry Reporting\",\n
        \           \"version\": \"1.14\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"fusion\",\n                    \"license\":
        \"INTEL_RBI_FUS\"\n                },\n                {\n                    \"name\":
        \"strategic\",\n                    \"license\": \"INTEL_RBI_EXEC\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--52eedfed-9042-5cb8-87dd-78de5c5c70e6\",\n
        \           \"report_id\": \"20-00020432\",\n            \"title\": \"Operational
        Technology Phishing Roundup: Sept. 30 \\u2013 Oct. 7, 2020\",\n            \"published_date\":
        \"October 08, 2020 04:27:19 PM\",\n            \"report_type\": \"Event Coverage/Implication\",\n
        \           \"version\": \"1.1\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber physical\",\n                    \"license\":
        \"INTEL_CYB_PHYS\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--4c221f48-81c1-517c-82b5-67594dda8501\",\n
        \           \"report_id\": \"22-00021308\",\n            \"title\": \"After
        Hiatus, QAKBOT Distributed via EMOTET, SMOKELOADER, and Existing QAKBOT Infections;
        EMOTET Also Observed Distributing XMRIG Cryptocurrency Miner\",\n            \"published_date\":
        \"September 09, 2022 10:28:26 PM\",\n            \"report_type\": \"Event
        Coverage/Implication\",\n            \"version\": \"1.0\",\n            \"audience\":
        [\n                {\n                    \"name\": \"cyber crime\",\n                    \"license\":
        \"INTEL_CYB_CRIME\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        },\n        {\n            \"id\": \"report--c10c1cae-958d-5c9e-b802-e709a9a63a0d\",\n
        \           \"report_id\": \"21-00017606\",\n            \"title\": \"Country
        Profile: France (2021)\",\n            \"published_date\": \"August 10, 2021
        08:28:26 PM\",\n            \"report_type\": \"Country Profile\",\n            \"version\":
        \"2.6\",\n            \"audience\": [\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                },\n
        \               {\n                    \"name\": \"strategic\",\n                    \"license\":
        \"INTEL_RBI_EXEC\"\n                }\n            ]\n        },\n        {\n
        \           \"id\": \"report--08707c35-9091-5821-865b-825675fc63c4\",\n            \"report_id\":
        \"22-00018924\",\n            \"title\": \"Operational Technology Phishing
        Roundup: Aug. 10\\u201317, 2022\",\n            \"published_date\": \"August
        17, 2022 04:33:59 PM\",\n            \"report_type\": \"Event Coverage/Implication\",\n
        \           \"version\": \"1.0\",\n            \"audience\": [\n                {\n
        \                   \"name\": \"cyber physical\",\n                    \"license\":
        \"INTEL_CYB_PHYS\"\n                },\n                {\n                    \"name\":
        \"fusion\",\n                    \"license\": \"INTEL_RBI_FUS\"\n                }\n
        \           ]\n        }\n    ],\n    \"last_updated\": \"2023-01-27T02:20:01.000Z\",\n
        \   \"name\": \"SMOKELOADER\",\n    \"description\": \"SMOKELOADER is a downloader
        that retrieves additional payloads via HTTP. Retrieved payloads are mapped
        into memory and may include plugins that expand SMOKELOADER's functionality.
        Capabilities added via plugins include keylogging, credential theft, and DDoS.
        Retrieved payloads may also include additional malware such as AZORULT, FORMBOOK,
        REMCOS, URSNIF, SILENTNIGHT, TRICKBOT, and SYSTEMBC.\",\n    \"id\": \"malware--bc1aac4f-7b86-537d-8e37-840218794b8e\",\n
        \   \"is_publishable\": true\n}"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 79048c4ebcad57eb-IAD
      Cache-Control:
      - max-age=3600, must-revalidate, private
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Jan 2023 21:23:11 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Transfer-Encoding:
      - chunked
      Vary:
      - Origin
      - Accept-Encoding
      - Authorization
      X-Api-Proxy:
      - '1'
      content-length:
      - '26958'
      x-amzn-trace-id:
      - 27748b907c47aca3e178f9f5fce71143
    status:
      code: 200
      message: OK
version: 1
